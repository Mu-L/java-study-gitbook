(window.webpackJsonp=window.webpackJsonp||[]).push([[397],{775:function(t,n,a){"use strict";a.r(n);var s=a(26),i=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot启动过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot启动过程"}},[t._v("#")]),t._v(" SpringBoot启动过程")]),t._v(" "),a("h3",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),a("p",[t._v("SpringBoot 的启动很简单，代码如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从代码上可以看出，调用了SpringApplication的静态方法run。这个run 方法会"),a("strong",[t._v("构造一个SpringApplication的实例")]),t._v("，然后再调用这里实例的"),a("strong",[t._v("run方法就表示启动SpringBoot")]),t._v("。")]),t._v(" "),a("ol",[a("li",[t._v("构造一个SpringApplication的实例")]),t._v(" "),a("li",[t._v("run方法就表示启动SpringBoot")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200321004400020.png",alt:"image-20200321004400020"}})]),t._v(" "),a("h2",{attrs:{id:"_2-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-总结"}},[t._v("#")]),t._v(" 2. 总结")]),t._v(" "),a("p",[t._v("SpringBoot启动的时候，不论调用什么方法，都会构造一个SpringApplication的实例，然后调用这个实例的run方法，这样就表示启动SpringBoot。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-构造一个springapplication的实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-构造一个springapplication的实例"}},[t._v("#")]),t._v(" 2.1 构造一个SpringApplication的实例")]),t._v(" "),a("p",[t._v("在run方法调用之前，也就是"),a("strong",[t._v("构造SpringApplication的时候会进行初始化的工作")]),t._v("，初始化的时候会做以下几件事：")]),t._v(" "),a("ol",[a("li",[t._v("把参数sources设置到SpringApplication属性中，这个sources可以是任何类型的参数。本文的例子中这个sources就是MyApplication的class对象")]),t._v(" "),a("li",[t._v("判断是否是web程序，并设置到webEnvironment这个boolean属性中")]),t._v(" "),a("li",[t._v("找出所有的初始化器，默认有5个，设置到initializers属性中")]),t._v(" "),a("li",[t._v("找出所有的应用程序监听器，默认有9个，设置到listeners属性中")]),t._v(" "),a("li",[t._v("找出运行的主类(main class)")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200321004534266.png",alt:"image-20200321004534266"}})]),t._v(" "),a("h2",{attrs:{id:"_2-2-run方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-run方法"}},[t._v("#")]),t._v(" 2.2 run方法")]),t._v(" "),a("p",[t._v("SpringApplication构造完成之后调用run方法，启动SpringApplication，run方法执行的时候会做以下几件事：")]),t._v(" "),a("ol",[a("li",[t._v("构造一个StopWatch，观察SpringApplication的执行")]),t._v(" "),a("li",[t._v("找出所有的SpringApplicationRunListener并封装到SpringApplicationRunListeners中，用于监听run方法的执行。监听的过程中会封装成事件并广播出去让初始化过程中产生的应用程序监听器进行监听")]),t._v(" "),a("li",[t._v("构造Spring容器(ApplicationContext)，并返回\n"),a("ol",[a("li",[t._v("创建Spring容器的判断是否是web环境，是的话构造AnnotationConfigEmbeddedWebApplicationContext，否则构造AnnotationConfigApplicationContext")]),t._v(" "),a("li",[t._v("初始化过程中产生的初始化器在这个时候开始工作")]),t._v(" "),a("li",[t._v("Spring容器的刷新(完成bean的解析、各种processor接口的执行、条件注解的解析等等)")])])]),t._v(" "),a("li",[t._v("从Spring容器中找出ApplicationRunner和CommandLineRunner接口的实现类并排序后依次执行")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200321004718521.png",alt:"image-20200321004718521"}})]),t._v(" "),a("p",[t._v("run方法的第4步")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200321010602661.png",alt:"image-20200321010602661"}})]),t._v(" "),a("h2",{attrs:{id:"面试真题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试真题"}},[t._v("#")]),t._v(" 面试真题")]),t._v(" "),a("p",[t._v("你能讲一下SpringBootApplication的启动过程是怎么样子？")]),t._v(" "),a("blockquote",[a("p",[t._v("SpringBoot启动的时候，会构造一个SpringApplication的实例，然后调用这个实例的run方法。这就表示启动了SpringBoot")]),t._v(" "),a("p",[t._v("构造SpringApplication实例的时候")]),t._v(" "),a("ol",[a("li",[t._v("把参数设置到SpringApplication属性")]),t._v(" "),a("li",[t._v("判断是否是web程序")]),t._v(" "),a("li",[t._v("找出所有的初始化器")]),t._v(" "),a("li",[t._v("找出所有的应用程序监听器")]),t._v(" "),a("li",[t._v("找出运行的主类")])]),t._v(" "),a("p",[t._v("运行run方法")]),t._v(" "),a("ol",[a("li",[t._v("构造一个StopWatch，观察SpringApplication的执行")]),t._v(" "),a("li",[t._v("SpringApplicationRunListener 监听run方法的执行")]),t._v(" "),a("li",[t._v("构造Spring容器(ApplicationContext)，并返回")]),t._v(" "),a("li",[t._v("从Spring容器中找出ApplicationRunner和CommandLineRunner接口的实现类并排序后依次执行")])])]),t._v(" "),a("p",[t._v("业务提炼 精简版")]),t._v(" "),a("blockquote",[a("p",[t._v("springboot 通过根据配置文件自动装配所属依赖的类，再用动态代理的方式注入到Spring容器里面")])]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://fangjian0423.github.io/2017/04/30/springboot-startup-analysis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot源码分析之SpringBoot的启动过程"),a("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=i.exports}}]);