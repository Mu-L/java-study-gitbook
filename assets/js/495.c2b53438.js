(window.webpackJsonp=window.webpackJsonp||[]).push([[495],{877:function(a,s,t){"use strict";t.r(s);var e=t(26),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker基础-dockerfile详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker基础-dockerfile详解"}},[a._v("#")]),a._v(" Docker基础-Dockerfile详解")]),a._v(" "),t("h2",{attrs:{id:"_1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[a._v("#")]),a._v(" 1. 简介")]),a._v(" "),t("p",[a._v("Dokcerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明")]),a._v(" "),t("h2",{attrs:{id:"_2-命令组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令组成"}},[a._v("#")]),a._v(" 2. 命令组成")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("部分")]),a._v(" "),t("th",[a._v("命令")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("基础镜像信息")]),a._v(" "),t("td",[a._v("FROM")])]),a._v(" "),t("tr",[t("td",[a._v("维护者信息")]),a._v(" "),t("td",[a._v("MAINTAINER、LABEL")])]),a._v(" "),t("tr",[t("td",[a._v("镜像操作指令")]),a._v(" "),t("td",[a._v("RUN、COPY、ADD、EXPOSE、WORKDIR、ONBUILD、USER、VOLUME等")])]),a._v(" "),t("tr",[t("td",[a._v("容器启动时执行指令")]),a._v(" "),t("td",[a._v("CMD、ENTRYPOINT")])])])]),a._v(" "),t("h2",{attrs:{id:"_3-基础镜像信息-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-基础镜像信息-命令"}},[a._v("#")]),a._v(" 3.基础镜像信息 命令")]),a._v(" "),t("h3",{attrs:{id:"_3-1-from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-from"}},[a._v("#")]),a._v(" 3.1 FROM")]),a._v(" "),t("p",[a._v("指定哪种镜像作为新镜像的基础镜像，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("FROM ubuntu:14.04\n")])])]),t("h2",{attrs:{id:"_4-维护者信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-维护者信息"}},[a._v("#")]),a._v(" 4.维护者信息")]),a._v(" "),t("h3",{attrs:{id:"_4-1-maintainer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-maintainer"}},[a._v("#")]),a._v(" 4.1 MAINTAINER")]),a._v(" "),t("p",[a._v("指明该镜像的作者和其电子邮件，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("MAINTAINER zsz "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xxxxxxx@qq.com"')]),a._v("\n")])])]),t("h3",{attrs:{id:"_4-2-label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-label"}},[a._v("#")]),a._v(" 4.2 LABEL")]),a._v(" "),t("p",[a._v("功能是为镜像指定标签。也可以使用"),t("code",[a._v("LABEL")]),a._v("来指定镜像作者")]),a._v(" "),t("h2",{attrs:{id:"_5-镜像操作指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-镜像操作指令"}},[a._v("#")]),a._v(" 5. 镜像操作指令")]),a._v(" "),t("h3",{attrs:{id:"_5-1-run-重点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-run-重点"}},[a._v("#")]),a._v(" 5.1 RUN(重点)")]),a._v(" "),t("p",[a._v("在新镜像内部执行的命令，比如安装一些软件、配置一些基础环境，可使用\\来换行，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello docker!'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /usr/local/file.txt\n")])])]),t("p",[a._v("也可以使用exec格式"),t("code",[a._v('RUN ["executable", "param1", "param2"]')]),a._v("的命令，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("RUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"apt-get"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"install"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-y"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nginx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("要注意的是，"),t("strong",[t("code",[a._v("executable")]),a._v("是命令，后面的param是参数")])]),a._v(" "),t("h4",{attrs:{id:"_5-1-1-减少不必要层级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-减少不必要层级"}},[a._v("#")]),a._v(" 5.1.1 减少不必要层级")]),a._v(" "),t("p",[t("strong",[a._v("注意")]),a._v("：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。例如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("FROM centos\nRUN yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" -O redis.tar.gz "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),a._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf redis.tar.gz\n")])])]),t("p",[a._v("以上执行会创建 3 层镜像。可简化为以下格式：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("FROM centos\nRUN yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" -O redis.tar.gz "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf redis.tar.gz\n")])])]),t("p",[a._v("如上，以 "),t("strong",[a._v("&&")]),a._v(" 符号连接命令，这样执行后，只会创建 1 层镜像。")]),a._v(" "),t("h3",{attrs:{id:"_5-2-copy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-copy"}},[a._v("#")]),a._v(" 5.2 COPY")]),a._v(" "),t("p",[a._v("将主机的文件复制到镜像内，如果目的位置不存在，Docker会自动创建所有需要的目录结构，但是它只是单纯的复制，并不会去做文件提取和解压工作。如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("COPY application.yml /etc/springboot/hello-service/src/resources\n")])])]),t("p",[t("strong",[a._v("注意：需要复制的目录一定要放在Dockerfile文件的同级目录下")])]),a._v(" "),t("p",[a._v("原因：")]),a._v(" "),t("blockquote",[t("p",[a._v("因为构建环境将会上传到Docker守护进程，而复制是在Docker守护进程中进行的。任何位于构建环境之外的东西都是不可用的。COPY指令的目的的位置则必须是容器内部的一个绝对路径。\n---《THE DOCKER BOOK》")])]),a._v(" "),t("h3",{attrs:{id:"_5-3-add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-add"}},[a._v("#")]),a._v(" 5.3 ADD")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\tADD <src>... <dest>\n")])])]),t("p",[a._v("将主机的文件复制到镜像中，跟COPY一样，限制条件和使用方式都一样，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ADD application.yml /etc/springboot/hello-service/src/resources\n")])])]),t("p",[a._v("但是ADD会对压缩文件（tar, gzip, bzip2, etc）做提取和解压操作。")]),a._v(" "),t("p",[a._v("src 可以是一个本地文件，还可以是一个"),t("code",[a._v("url")]),a._v("。然后自动下载和解压")]),a._v(" "),t("h3",{attrs:{id:"_5-4-expose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-expose"}},[a._v("#")]),a._v(" 5.4 EXPOSE")]),a._v(" "),t("p",[a._v("暴露镜像的端口供主机做映射，启动镜像时，使用-P参数来讲镜像端口与宿主机的随机端口做映射。使用方式（可指定多个）：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" \nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8081")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("h3",{attrs:{id:"_5-5-workdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-workdir"}},[a._v("#")]),a._v(" 5.5 WORKDIR")]),a._v(" "),t("p",[a._v("在构建镜像时，指定镜像的工作目录，之后的命令都是基于此工作目录，如果不存在，则会创建目录。如")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("WORKDIR /usr/local\nWORKDIR webservice\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello docker'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" text.txt\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("最终会在"),t("code",[a._v("/usr/local/webservice/")]),a._v("目录下生成text.txt文件")]),a._v(" "),t("h3",{attrs:{id:"_5-6-env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-env"}},[a._v("#")]),a._v(" 5.6 ENV")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ENV <key>=<value> ...\n")])])]),t("p",[a._v("设置容器内环境变量")]),a._v(" "),t("h3",{attrs:{id:"_5-7-volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-volume"}},[a._v("#")]),a._v(" 5.7 VOLUME")]),a._v(" "),t("p",[a._v("用来向基于镜像创建的容器添加卷。比如你可以将mongodb镜像中存储数据的data文件指定为主机的某个文件。(容器内部建议不要存储任何数据)\n如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("VOLUME /data/db /data/configdb\n")])])]),t("p",[a._v("注意:"),t("code",[a._v("VOLUME 主机目录 容器目录")])]),a._v(" "),t("h3",{attrs:{id:"_5-8-onbuild"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-onbuild"}},[a._v("#")]),a._v(" 5.8 ONBUILD")]),a._v(" "),t("p",[a._v("当一个包含ONBUILD命令的镜像被用作其他镜像的基础镜像时(比如用户的镜像需要从某为准备好的位置添加源代码，或者用户需要执行特定于构建镜像的环境的构建脚本)，该命令就会执行。\n如创建镜像image-A")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("FROM ubuntu\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nONBUILD ADD "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" /var/www\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("然后创建镜像image-B，指定image-A为基础镜像，如")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("FROM image-A\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("然后在构建image-B的时候，日志上显示如下:")]),a._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Step 0 : FROM image-A\n# Execting 1 build triggers\nStep onbuild-0 : ADD . /var/www\n...\n")])])]),t("h3",{attrs:{id:"_5-9-user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-user"}},[a._v("#")]),a._v(" 5.9 USER")]),a._v(" "),t("p",[a._v("指定该镜像以什么样的用户去执行，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" mongo\n")])])]),t("h2",{attrs:{id:"_6-容器启动时执行指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-容器启动时执行指令"}},[a._v("#")]),a._v(" 6. 容器启动时执行指令")]),a._v(" "),t("h3",{attrs:{id:"_6-1-cmd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-cmd"}},[a._v("#")]),a._v(" 6.1 CMD")]),a._v(" "),t("p",[a._v("容器启动时需要执行的命令，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("CMD /bin/bash\n")])])]),t("p",[a._v("同样可以使用exec语法，如")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/bash"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("当有多个CMD的时候，只有最后一个生效。")]),a._v(" "),t("h3",{attrs:{id:"_6-2-entrypoint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-entrypoint"}},[a._v("#")]),a._v(" 6.2 ENTRYPOINT")]),a._v(" "),t("p",[a._v("作用和用法和CMD一模一样")]),a._v(" "),t("h3",{attrs:{id:"_6-3-cmd和entrypoint的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-cmd和entrypoint的区别"}},[a._v("#")]),a._v(" 6.3 CMD和ENTRYPOINT的区别")]),a._v(" "),t("p",[a._v("敲黑板！！！非常重要\n"),t("strong",[a._v("一定要注意！")])]),a._v(" "),t("p",[t("strong",[a._v("一定要注意！")])]),a._v(" "),t("p",[t("strong",[a._v("一定要注意！")])]),a._v(" "),t("p",[a._v("CMD和ENTRYPOINT同样作为容器启动时执行的命令，区别有以下几点：")]),a._v(" "),t("h4",{attrs:{id:"_6-3-1-cmd的命令会被-docker-run-的命令覆盖而entrypoint不会"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-cmd的命令会被-docker-run-的命令覆盖而entrypoint不会"}},[a._v("#")]),a._v(" 6.3.1 CMD的命令会被 docker run 的命令覆盖而ENTRYPOINT不会")]),a._v(" "),t("p",[a._v("如使用"),t("code",[a._v('CMD ["/bin/bash"]')]),a._v("或"),t("code",[a._v('ENTRYPOINT ["/bin/bash"]')]),a._v("后，再使用"),t("code",[a._v("docker run -ti image")]),a._v("启动容器，它会自动进入容器内部的交互终端，如同使用\n"),t("code",[a._v("docker run -ti image /bin/bash")]),a._v("。")]),a._v(" "),t("p",[a._v("但是如果启动镜像的命令为"),t("code",[a._v("docker run -ti image /bin/ps")]),a._v("，使用CMD后面的命令就会被覆盖转而执行"),t("code",[a._v("bin/ps")]),a._v("命令，而"),t("em",[a._v("ENTRYPOINT的则不会，而是会把docker run 后面的命令当做ENTRYPOINT执行命令的参数")]),a._v("。\n以下例子比较容易理解\nDockerfile中为")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/user/sbin/nginx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("然后通过启动build之后的容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run -ti image -g "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"daemon off"')]),a._v("\n")])])]),t("p",[a._v("此时"),t("code",[a._v('-g "daemon off"')]),a._v("会被当成参数传递给ENTRYPOINT，最终的命令变成了")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("/user/sbin/nginx -g "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"daemon off"')]),a._v("\n")])])]),t("h4",{attrs:{id:"_6-3-2-cmd和entrypoint都存在时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-cmd和entrypoint都存在时"}},[a._v("#")]),a._v(" 6.3.2 CMD和ENTRYPOINT都存在时")]),a._v(" "),t("p",[a._v("CMD和ENTRYPOINT都存在时，CMD的指令变成了ENTRYPOINT的参数，并且此CMD提供的参数会被 docker run 后面的命令覆盖，如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"echo"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"i am"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"docker"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("之后启动构建之后的容器")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("使用"),t("code",[a._v("docker run -ti image")])]),a._v(" "),t("p",[a._v("输出“hello i am docker”")])]),a._v(" "),t("li",[t("p",[a._v("使用"),t("code",[a._v("docker run -ti image world")])]),a._v(" "),t("p",[a._v("输出“hello i am world”")])])]),a._v(" "),t("p",[a._v("指令比较多，可以通过分类(如开头的表格)的办法去记忆")]),a._v(" "),t("h2",{attrs:{id:"_7-构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-构建镜像"}},[a._v("#")]),a._v(" 7. 构建镜像")]),a._v(" "),t("p",[t("code",[a._v("Dockerfile")]),a._v("文件编写好以后，真正构建镜像时需要通过"),t("code",[a._v("docker build")]),a._v("命令。")]),a._v(" "),t("p",[t("code",[a._v("docker build")]),a._v("命令用于使用"),t("code",[a._v("Dockerfile")]),a._v("创建镜像。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用当前目录的 Dockerfile 创建镜像")]),a._v("\ndocker build -t mycentos:7 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过 -f Dockerfile 文件的位置创建镜像")]),a._v("\ndocker build -f /home/ruoyi/docker/Dockerfile -t mycentos:7 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("ul",[t("li",[a._v("-f：指定要使用的 Dockerfile 路径；")]),a._v(" "),t("li",[a._v("--tag, -t：镜像的名字及标签，可以在一次构建中为一个镜像设置多个标签。")])]),a._v(" "),t("h2",{attrs:{id:"_8-示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-示例"}},[a._v("#")]),a._v(" 8. 示例")]),a._v(" "),t("p",[a._v("接下来我们通过基础镜像"),t("code",[a._v("centos:7")]),a._v("，在该镜像中安装"),t("code",[a._v("jdk")]),a._v("和"),t("code",[a._v("tomcat")]),a._v("以后将其制作为一个新的镜像"),t("code",[a._v("mycentos:7")])]),a._v(" "),t("p",[a._v("创建目录，编写"),t("code",[a._v("Dockerfile")]),a._v("文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /usr/local/"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("dockerfile"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n")])])]),t("p",[a._v("执行命令："),t("code",[a._v("vi Dockerfile")]),a._v("，写入信息。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指明构建的新镜像是来自于`centos:7`基础镜像")]),a._v("\nFROM centos:7\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过镜像标签声明了作者信息")]),a._v("\nLABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("maintainer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ruoyi.vip"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置工作目录")]),a._v("\nWORKDIR /usr/local\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 新镜像构建成功以后创建指定目录")]),a._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /usr/local/java "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /usr/local/tomcat\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 拷贝文件到镜像中并解压")]),a._v("\nADD jdk-8u111-linux-x64.tar.gz /usr/local/java\nADD apache-tomcat-8.5.27.tar.gz /usr/local/tomcat\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 暴露容器运行时的 8080 监听端口给外部")]),a._v("\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置容器内 JAVA_HOME 环境变量")]),a._v("\nENV JAVA_HOME /usr/local/java/jdk1.8.0_111\nENV "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAVA_HOME")]),a._v("/bin\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动容器时启动 tomcat")]),a._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/usr/local/tomcat/apache-tomcat-8.5.27/bin/catalina.sh"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"run"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("构建镜像")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("docker build -f /home/ruoyi/docker/Dockerfile -t mycentos:test "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("启动镜像")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("docker run -di --name mycentos -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 mycentos:test\n")])])]),t("p",[a._v("进入容器")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it mycentos7 /bin/bash\n")])])]),t("h2",{attrs:{id:"_9-镜像构建历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-镜像构建历史"}},[a._v("#")]),a._v(" 9. 镜像构建历史")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker history 镜像名称:标签|ID\ndocker history mycentos:7\n")])])]),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/10ed530766af",target:"_blank",rel:"noopener noreferrer"}},[a._v("学习Docker之Dockerfile的命令"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/cbce69c7a52f",target:"_blank",rel:"noopener noreferrer"}},[a._v("使用Dockerfile构建Docker镜像"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"http://doc.ruoyi.vip/ruoyi-cloud/cloud/dokcer.html#%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F",target:"_blank",rel:"noopener noreferrer"}},[a._v("若依文档-Dockerfile"),t("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);