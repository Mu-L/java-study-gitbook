(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{403:function(t,n,a){"use strict";a.r(n);var s=a(26),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js调用android方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js调用android方法"}},[t._v("#")]),t._v(" js调用Android方法")]),t._v(" "),a("h2",{attrs:{id:"_1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),a("p",[t._v("对于JS调用Android代码的方法有3种：")]),t._v(" "),a("ol",[a("li",[t._v("通过"),a("code",[t._v("WebView")]),t._v("的"),a("code",[t._v("addJavascriptInterface（）")]),t._v("进行对象映射")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("WebViewClient")]),t._v(" 的"),a("code",[t._v("shouldOverrideUrlLoading ()")]),t._v("方法回调拦截 url")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("WebChromeClient")]),t._v(" 的"),a("code",[t._v("onJsAlert()")]),t._v("、"),a("code",[t._v("onJsConfirm()")]),t._v("、"),a("code",[t._v("onJsPrompt（）")]),t._v("方法回调拦截JS对话框"),a("code",[t._v("alert()")]),t._v("、"),a("code",[t._v("confirm()")]),t._v("、"),a("code",[t._v("prompt（）")]),t._v(" 消息")])]),t._v(" "),a("h2",{attrs:{id:"_2-三种方法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-三种方法实现"}},[t._v("#")]),t._v(" 2. 三种方法实现")]),t._v(" "),a("h3",{attrs:{id:"_2-1-方式1-通过-webview的addjavascriptinterface-进行对象映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-方式1-通过-webview的addjavascriptinterface-进行对象映射"}},[t._v("#")]),t._v(" 2.1 方式1：通过 "),a("code",[t._v("WebView")]),t._v("的"),a("code",[t._v("addJavascriptInterface（）")]),t._v("进行对象映射")]),t._v(" "),a("p",[a("strong",[t._v("步骤1：定义一个与JS对象映射关系的Android类：AndroidtoJs")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 继承自Object类\npublic class AndroidtoJs extends Object {\n\n    // 定义JS需要调用的方法\n    // 被JS调用的方法必须加入@JavascriptInterface注解\n    @JavascriptInterface\n    public void hello(String msg) {\n        System.out.println("JS调用了Android的hello方法");\n    }\n}\n')])])]),a("p",[a("strong",[t._v("步骤2：将需要调用的JS代码以.html格式放到src/main/assets文件夹里")])]),t._v(" "),a("p",[a("strong",[t._v("app端和前端需要约定两个配置")])]),t._v(" "),a("ul",[a("li",[t._v("js函数前缀（本例：test）")]),t._v(" "),a("li",[t._v("和对应调用函数（本例：hello()）")])]),t._v(" "),a("p",[a("em",[t._v("需要加载JS代码：javascript.html")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Carson"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n         \n        \n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callAndroid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于对象映射，所以调用test对象等于调用Android映射的对象")]),t._v("\n            test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js调用了android中的hello方法"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      //点击按钮则调用callAndroid函数\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("callAndroid()"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("如在vue中也是一样的写法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callApp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈哈，我是js调用的"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("步骤3：在Android里通过WebView设置Android类与JS代码的映射**")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainActivity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppCompatActivity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebView")]),t._v(" mWebView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bundle")]),t._v(" savedInstanceState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savedInstanceState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activity_main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        mWebView "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findViewById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webview"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSettings")]),t._v(" webSettings "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mWebView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSettings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置与Js交互的权限")]),t._v("\n        webSettings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setJavaScriptEnabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过addJavascriptInterface()将Java对象映射到JS对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数1：Javascript对象名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数2：Java对象名")]),t._v("\n        mWebView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addJavascriptInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AndroidtoJs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AndroidtoJS类对象映射到js的test对象")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载JS代码")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 格式规定为:file:///android_asset/文件名.html")]),t._v("\n        mWebView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file:///android_asset/javascript.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-1-1-方式1-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-方式1-特点"}},[t._v("#")]),t._v(" 2.1.1 方式1 特点")]),t._v(" "),a("ul",[a("li",[t._v("优点：使用简单")]),t._v(" "),a("li",[t._v("缺点：存在严重的漏洞问题")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-方式2-通过-webviewclient-的方法shouldoverrideurlloading-回调拦截-url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-方式2-通过-webviewclient-的方法shouldoverrideurlloading-回调拦截-url"}},[t._v("#")]),t._v(" 2.2 方式2：通过 "),a("code",[t._v("WebViewClient")]),t._v(" 的方法"),a("code",[t._v("shouldOverrideUrlLoading ()")]),t._v("回调拦截 url")]),t._v(" "),a("ul",[a("li",[t._v("具体原理：")])]),t._v(" "),a("ol",[a("li",[t._v("Android通过 "),a("code",[t._v("WebViewClient")]),t._v(" 的回调方法"),a("code",[t._v("shouldOverrideUrlLoading ()")]),t._v("拦截 url")]),t._v(" "),a("li",[t._v("解析该 url 的协议")]),t._v(" "),a("li",[t._v("如果检测到是预先约定好的协议，就调用相应方法")])]),t._v(" "),a("blockquote",[a("p",[t._v("即JS需要调用Android的方法")])]),t._v(" "),a("ul",[a("li",[t._v("具体使用：\n**步骤1：**在JS约定所需要的Url协议")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html>\n\n   <head>\n      <meta charset="utf-8">\n      <title>Carson_Ho</title>\n      \n     <script>\n         function callAndroid(){\n            /*约定的url协议为：js://webview?arg1=111&arg2=222*/\n            document.location = "js://webview?arg1=111&arg2=222";\n         }\n      <\/script>\n</head>\n\n\x3c!-- 点击按钮则调用callAndroid（）方法  --\x3e\n   <body>\n     <button type="button" id="button1" onclick="callAndroid()">点击调用Android代码</button>\n   </body>\n</html>\n')])])]),a("p",[t._v("当该JS通过Android的"),a("code",[t._v('mWebView.loadUrl("file:///android_asset/javascript.html")')]),t._v("加载后，就会回调"),a("code",[t._v("shouldOverrideUrlLoading （）")])]),t._v(" "),a("p",[a("strong",[t._v("步骤2：在Android通过WebViewClient复写shouldOverrideUrlLoading （）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MainActivity extends AppCompatActivity {\n\n    WebView mWebView;\n//    Button button;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mWebView = (WebView) findViewById(R.id.webview);\n\n        WebSettings webSettings = mWebView.getSettings();\n\n        // 设置与Js交互的权限\n        webSettings.setJavaScriptEnabled(true);\n        // 设置允许JS弹窗\n        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);\n\n        // 步骤1：加载JS代码\n        // 格式规定为:file:///android_asset/文件名.html\n        mWebView.loadUrl("file:///android_asset/javascript.html");\n\n\n// 复写WebViewClient类的shouldOverrideUrlLoading方法\nmWebView.setWebViewClient(new WebViewClient() {\n                                      @Override\n                                      public boolean shouldOverrideUrlLoading(WebView view, String url) {\n\n                                          // 步骤2：根据协议的参数，判断是否是所需要的url\n                                          // 一般根据scheme（协议格式） & authority（协议名）判断（前两个参数）\n                                          //假定传入进来的 url = "js://webview?arg1=111&arg2=222"（同时也是约定好的需要拦截的）\n\n                                          Uri uri = Uri.parse(url);                                 \n                                          // 如果url的协议 = 预先约定的 js 协议\n                                          // 就解析往下解析参数\n                                          if ( uri.getScheme().equals("js")) {\n\n                                              // 如果 authority  = 预先约定协议里的 webview，即代表都符合约定的协议\n                                              // 所以拦截url,下面JS开始调用Android需要的方法\n                                              if (uri.getAuthority().equals("webview")) {\n\n                                                 //  步骤3：\n                                                  // 执行JS所需要调用的逻辑\n                                                  System.out.println("js调用了Android的方法");\n                                                  // 可以在协议上带有参数并传递到Android上\n                                                  HashMap<String, String> params = new HashMap<>();\n                                                  Set<String> collection = uri.getQueryParameterNames();\n\n                                              }\n\n                                              return true;\n                                          }\n                                          return super.shouldOverrideUrlLoading(view, url);\n                                      }\n                                  }\n        );\n   }\n        }\n')])])]),a("h4",{attrs:{id:"_2-2-1-方式2-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-方式2-特点"}},[t._v("#")]),t._v(" 2.2.1 方式2 特点")]),t._v(" "),a("ul",[a("li",[t._v("优点：不存在方式1的漏洞；")]),t._v(" "),a("li",[t._v("缺点：JS获取Android方法的返回值复杂。")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果JS想要得到Android方法的返回值，只能通过 WebView 的 "),a("code",[t._v("loadUrl （）")]),t._v("去执行 JS 方法把返回值传递回去，相关的代码如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// Android：MainActivity.java\nmWebView.loadUrl("javascript:returnResult(" + result + ")");\n\n// JS：javascript.html\nfunction returnResult(result){\n    alert("result is" + result);\n}\n')])])]),a("h3",{attrs:{id:"_2-3-方式3-通过-webchromeclient-的onjsalert-、onjsconfirm-、onjsprompt-方法回调拦截js对话框alert-、confirm-、prompt-消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-方式3-通过-webchromeclient-的onjsalert-、onjsconfirm-、onjsprompt-方法回调拦截js对话框alert-、confirm-、prompt-消息"}},[t._v("#")]),t._v(" 2.3 方式3：通过 "),a("code",[t._v("WebChromeClient")]),t._v(" 的"),a("code",[t._v("onJsAlert()")]),t._v("、"),a("code",[t._v("onJsConfirm()")]),t._v("、"),a("code",[t._v("onJsPrompt（）")]),t._v("方法回调拦截JS对话框"),a("code",[t._v("alert()")]),t._v("、"),a("code",[t._v("confirm()")]),t._v("、"),a("code",[t._v("prompt（）")]),t._v(" 消息")]),t._v(" "),a("p",[t._v("在JS中，有三个常用的对话框方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/944365-1385f748618af886.png",alt:"944365-1385f748618af886"}})]),t._v(" "),a("p",[t._v("方式3的原理：Android通过 "),a("code",[t._v("WebChromeClient")]),t._v(" 的"),a("code",[t._v("onJsAlert()")]),t._v("、"),a("code",[t._v("onJsConfirm()")]),t._v("、"),a("code",[t._v("onJsPrompt（）")]),t._v("方法回调分别拦截JS对话框\n（即上述三个方法），得到他们的消息内容，然后解析即可。")]),t._v(" "),a("p",[t._v("下面的例子将用**拦截 JS的输入框（即prompt（）方法）**说明 ：")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("常用的拦截是：拦截 JS的输入框（即"),a("code",[t._v("prompt（）")]),t._v("方法）")]),t._v(" "),a("li",[t._v("因为只有"),a("code",[t._v("prompt（）")]),t._v("可以返回任意类型的值，操作最全面方便、更加灵活；而alert（）对话框没有返回值；confirm（）对话框只能返回两种状态（确定 / 取消）两个值")])])]),t._v(" "),a("p",[a("strong",[t._v("步骤1：加载JS代码，如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html>\n   <head>\n      <meta charset="utf-8">\n      <title>Carson_Ho</title>\n      \n     <script>\n        \n    function clickprompt(){\n    // 调用prompt（）\n    var result=prompt("js://demo?arg1=111&arg2=222");\n    alert("demo " + result);\n}\n\n      <\/script>\n</head>\n\n\x3c!-- 点击按钮则调用clickprompt()  --\x3e\n   <body>\n     <button type="button" id="button1" onclick="clickprompt()">点击调用Android代码</button>\n   </body>\n</html>\n')])])]),a("p",[t._v("当使用"),a("code",[t._v('mWebView.loadUrl("file:///android_asset/javascript.html")')]),t._v("加载了上述JS代码后，就会触发回调"),a("code",[t._v("onJsPrompt（）")]),t._v("，具体如下：")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("如果是拦截警告框（即"),a("code",[t._v("alert()")]),t._v("），则触发回调"),a("code",[t._v("onJsAlert（）")]),t._v("；")]),t._v(" "),a("li",[t._v("如果是拦截确认框（即"),a("code",[t._v("confirm()")]),t._v("），则触发回调"),a("code",[t._v("onJsConfirm（）")]),t._v("；")])])]),t._v(" "),a("p",[a("strong",[t._v("步骤2：在Android通过WebChromeClient复写onJsPrompt（）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MainActivity extends AppCompatActivity {\n\n    WebView mWebView;\n//    Button button;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mWebView = (WebView) findViewById(R.id.webview);\n\n        WebSettings webSettings = mWebView.getSettings();\n\n        // 设置与Js交互的权限\n        webSettings.setJavaScriptEnabled(true);\n        // 设置允许JS弹窗\n        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);\n\n// 先加载JS代码\n        // 格式规定为:file:///android_asset/文件名.html\n        mWebView.loadUrl("file:///android_asset/javascript.html");\n\n\n        mWebView.setWebChromeClient(new WebChromeClient() {\n                                        // 拦截输入框(原理同方式2)\n                                        // 参数message:代表promt（）的内容（不是url）\n                                        // 参数result:代表输入框的返回值\n                                        @Override\n                                        public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) {\n                                            // 根据协议的参数，判断是否是所需要的url(原理同方式2)\n                                            // 一般根据scheme（协议格式） & authority（协议名）判断（前两个参数）\n                                            //假定传入进来的 url = "js://webview?arg1=111&arg2=222"（同时也是约定好的需要拦截的）\n\n                                            Uri uri = Uri.parse(message);\n                                            // 如果url的协议 = 预先约定的 js 协议\n                                            // 就解析往下解析参数\n                                            if ( uri.getScheme().equals("js")) {\n\n                                                // 如果 authority  = 预先约定协议里的 webview，即代表都符合约定的协议\n                                                // 所以拦截url,下面JS开始调用Android需要的方法\n                                                if (uri.getAuthority().equals("webview")) {\n\n                                                    //\n                                                    // 执行JS所需要调用的逻辑\n                                                    System.out.println("js调用了Android的方法");\n                                                    // 可以在协议上带有参数并传递到Android上\n                                                    HashMap<String, String> params = new HashMap<>();\n                                                    Set<String> collection = uri.getQueryParameterNames();\n\n                                                    //参数result:代表消息框的返回值(输入值)\n                                                    result.confirm("js调用了Android的方法成功啦");\n                                                }\n                                                return true;\n                                            }\n                                            return super.onJsPrompt(view, url, message, defaultValue, result);\n                                        }\n\n// 通过alert()和confirm()拦截的原理相同，此处不作过多讲述\n\n                                        // 拦截JS的警告框\n                                        @Override\n                                        public boolean onJsAlert(WebView view, String url, String message, JsResult result) {\n                                            return super.onJsAlert(view, url, message, result);\n                                        }\n\n                                        // 拦截JS的确认框\n                                        @Override\n                                        public boolean onJsConfirm(WebView view, String url, String message, JsResult result) {\n                                            return super.onJsConfirm(view, url, message, result);\n                                        }\n                                    }\n        );\n\n\n            }\n\n        }\n')])])]),a("h2",{attrs:{id:"_3-三种方式的对比-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-三种方式的对比-使用场景"}},[t._v("#")]),t._v(" 3. 三种方式的对比 & 使用场景")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/944365-8c91481325a5253e.png",alt:"944365-8c91481325a5253e"}})])])}),[],!1,null,null,null);n.default=e.exports}}]);