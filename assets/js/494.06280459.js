(window.webpackJsonp=window.webpackJsonp||[]).push([[494],{873:function(s,t,a){"use strict";a.r(t);var e=a(26),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker基础-dockercompose详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker基础-dockercompose详解"}},[s._v("#")]),s._v(" Docker基础-DockerCompose详解")]),s._v(" "),a("h2",{attrs:{id:"_1-背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[s._v("#")]),s._v(" 1. 背景")]),s._v(" "),a("p",[s._v("我们可以通过"),a("code",[s._v("Dockerfile")]),s._v("文件让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到"),a("strong",[s._v("需要多个容器相互配合来完成某项任务")]),s._v("的情况，或者开发一个"),a("code",[s._v("Web")]),s._v("应用，除了"),a("code",[s._v("Web")]),s._v("服务容器本身，还需要数据库服务容器、缓存容器，甚至还包括负载均衡容器等等。")]),s._v(" "),a("p",[a("code",[s._v("Docker Compose")]),s._v("恰好满足了这样的需求，")]),s._v(" "),a("ul",[a("li",[s._v("它是用于定义和运行多容器"),a("code",[s._v("Docker")]),s._v("应用程序的工具。")]),s._v(" "),a("li",[s._v("通过"),a("code",[s._v("Compose")]),s._v("，您可以使用"),a("code",[s._v("YAML")]),s._v("文件来配置应用程序所需要的服务。")]),s._v(" "),a("li",[s._v("然后使用一个命令，就可以通过"),a("code",[s._v("YAML")]),s._v("配置文件创建并启动所有服务。")])]),s._v(" "),a("p",[s._v("Docker Compose"),a("code",[s._v("项目是")]),s._v("Docker"),a("code",[s._v("官方的开源项目，来源于之前的")]),s._v("Fig"),a("code",[s._v("项目，使用")]),s._v("Python"),a("code",[s._v("语言编写。负责实现对")]),s._v("Docker"),a("code",[s._v("容器集群的快速编排。项目地址为：")]),s._v("https://github.com/docker/compose/releases")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("Docker Compose 将所管理的容器分为三层，分别是工程（project）、服务（service）、容器（container）")]),s._v(" "),a("li",[s._v("Docker Compose 运行目录下的所有文件（docker-compose.yml）组成一个工程,一个工程包含多个服务，每个服务中定义了容器运行的镜像、参数、依赖，一个服务可包括多个容器实例")])])]),s._v(" "),a("h2",{attrs:{id:"_2-docker-compose使用的三个步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-compose使用的三个步骤"}},[s._v("#")]),s._v(" 2. Docker Compose使用的三个步骤")]),s._v(" "),a("p",[a("code",[s._v("Docker Compose")]),s._v("使用的三个步骤为：")]),s._v(" "),a("ul",[a("li",[s._v("使用"),a("code",[s._v("Dockerfile")]),s._v("文件定义应用程序的环境；")]),s._v(" "),a("li",[s._v("使用"),a("code",[s._v("docker-compose.yml")]),s._v("文件定义构成应用程序的服务，这样它们可以在隔离环境中一起运行；")]),s._v(" "),a("li",[s._v("执行"),a("code",[s._v("docker-compose up")]),s._v("命令来创建并启动所有服务。")])]),s._v(" "),a("h2",{attrs:{id:"_3-安装-docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装-docker-compose"}},[s._v("#")]),s._v(" 3. 安装 Docker Compose")]),s._v(" "),a("ul",[a("li",[s._v("安装 Docker Compose 可以通过下面命令自动下载适应版本的 Compose，并为安装脚本添加执行权限")])]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("sudo curl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("L")]),s._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("compose"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("releases"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("download"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.21")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("compose"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("compose\nsudo chmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("compose\n")])])]),a("ul",[a("li",[s._v("查看安装是否成功")])]),s._v(" "),a("div",{staticClass:"language-undefined extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose -v\n")])])]),a("ul",[a("li",[s._v("卸载")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /usr/local/bin/docker-compose\n")])])]),a("h2",{attrs:{id:"_4-docker-compose-yml-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-compose-yml-文件"}},[s._v("#")]),s._v(" 4. docker-compose.yml 文件")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Docker Compose")]),s._v("允许用户通过"),a("code",[s._v("docker-compose.yml")]),s._v("文件（YAML 格式）来定义一组相关联的容器为一个工程（project）。")])]),s._v(" "),a("li",[a("p",[s._v("一个工程包含多个服务（service）")])]),s._v(" "),a("li",[a("p",[s._v("每个服务中定义了创建容器时所需的镜像、参数、依赖等。")])])]),s._v(" "),a("h2",{attrs:{id:"_5-顶级配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-顶级配置"}},[s._v("#")]),s._v(" 5.  顶级配置")]),s._v(" "),a("p",[a("code",[s._v("Docker Compose")]),s._v("模板文件我们需要关注的顶级配置有"),a("code",[s._v("version")]),s._v("、"),a("code",[s._v("services")]),s._v("、"),a("code",[s._v("networks")]),s._v("、"),a("code",[s._v("volumes")]),s._v("几个部分，除"),a("code",[s._v("version")]),s._v("外，其他几个顶级配置下还有很多下级配置，后面也会详细给大家介绍，先来看看这几个顶级配置都什么意思：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("version")]),s._v("：描述"),a("code",[s._v("Compose")]),s._v("文件的版本信息，当前最新版本为"),a("code",[s._v("3.8")]),s._v("，对应的"),a("code",[s._v("Docker")]),s._v("版本为"),a("code",[s._v("19.03.0+")])]),s._v(" "),a("li",[a("code",[s._v("services")]),s._v("：定义服务，可以多个，每个服务中定义了创建容器时所需的镜像、参数、依赖等")]),s._v(" "),a("li",[a("code",[s._v("networkds")]),s._v("：定义网络，可以多个，根据"),a("code",[s._v("DNS server")]),s._v("让相同网络中的容器可以直接通过容器名称进行通信")]),s._v(" "),a("li",[a("code",[s._v("volumes")]),s._v("：数据卷，用于实现目录挂载")])]),s._v(" "),a("h3",{attrs:{id:"_5-1-version-版本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-version-版本信息"}},[s._v("#")]),s._v(" 5.1 version 版本信息")]),s._v(" "),a("p",[s._v("描述"),a("code",[s._v("Compose")]),s._v("文件的版本信息，当前最新版本为"),a("code",[s._v("3.8")]),s._v("，对应的"),a("code",[s._v("Docker")]),s._v("版本为"),a("code",[s._v("19.03.0+")]),s._v("。关于每个版本的详细信息请参考："),a("code",[s._v("https://docs.docker.com/compose/compose-file/compose-versioning/")])]),s._v(" "),a("p",[s._v("以下为"),a("code",[s._v("Compose")]),s._v("文件的版本信息所对应的"),a("code",[s._v("Docker")]),s._v("版本。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Compose file format")]),s._v(" "),a("th",{staticStyle:{"text-align":"right"}},[s._v("Docker Engine release")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("3.8")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("19.03.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.7")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("18.06.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.6")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("18.02.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.5")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("17.12.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.4")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("17.09.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.3")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("17.06.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.2")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("17.04.0+")])]),s._v(" "),a("tr",[a("td",[s._v("3.1")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("1.13.1+")])]),s._v(" "),a("tr",[a("td",[s._v("3.0")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("1.13.0+")])]),s._v(" "),a("tr",[a("td",[s._v("...")]),s._v(" "),a("td",{staticStyle:{"text-align":"right"}},[s._v("1.x.x")])])])]),s._v(" "),a("h2",{attrs:{id:"_6-services-定义服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-services-定义服务"}},[s._v("#")]),s._v(" 6. services 定义服务")]),s._v(" "),a("p",[a("code",[s._v("services")]),s._v("用来定义服务，可以多个，每个服务中定义了创建容器时所需的镜像、参数、依赖等，就像将命令行参数传递给"),a("code",[s._v("docker run")]),s._v("一样。同样，网络和数据卷的定义也是一样的。")]),s._v(" "),a("p",[s._v("比如，通过"),a("code",[s._v("docker run")]),s._v("命令构建一个"),a("code",[s._v("MySQL")]),s._v("应用容器的命令如下：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run -di --name mysql8 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 -v /mydata/docker_mysql/conf:/etc/mysql/conf.d -v /mydata/docker_mysql/data:/var/lib/mysql -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v(" mysql:8\n")])])]),a("p",[s._v("使用"),a("code",[s._v("docker-compose.yml")]),s._v("以后则可以这样定义：")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义服务，可以多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器时所需的镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql8 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 容器名称，默认为"工程名称_服务条目名称_序号"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机与容器的端口映射关系")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:3306"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左边宿主机端口:右边容器端口")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器时所需的环境变量")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mydata/docker_mysql/conf:/etc/mysql/conf.d"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mydata/docker_mysql/data:/var/lib/mysql"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-1-image-镜像名称标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-image-镜像名称标签"}},[s._v("#")]),s._v(" 6.1 image 镜像名称标签")]),s._v(" "),a("p",[s._v("指定创建容器时所需的镜像名称标签或者镜像"),a("code",[s._v("ID")]),s._v("。如果镜像在本地不存在，会去远程拉取。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("world\n")])])]),a("h3",{attrs:{id:"_6-2-build-构建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-build-构建容器"}},[s._v("#")]),s._v(" 6.2 build 构建容器")]),s._v(" "),a("p",[s._v("除了可以基于指定的镜像构建容器，还可以基于"),a("code",[s._v("Dockerfile")]),s._v("文件构建，在使用"),a("code",[s._v("up")]),s._v("命令时会执行构建任务。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220617200827325.png",alt:"image-20220617200827325"}})]),s._v(" "),a("h3",{attrs:{id:"_6-3-context-文件路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-context-文件路径"}},[s._v("#")]),s._v(" 6.3 context 文件路径")]),s._v(" "),a("p",[s._v("该选项可以是"),a("code",[s._v("Dockerfile")]),s._v("文件的绝对/相对路径，也可以是远程"),a("code",[s._v("Git")]),s._v("仓库的"),a("code",[s._v("URL")]),s._v("，当提供的值是相对路径时，相对当前"),a("code",[s._v("docker-compose.yml")]),s._v("文件所在目录。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" . "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相对当前 docker-compose.yml 文件所在目录，基于名称为 Dockerfile 的文件构建镜像")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-4-dockerfile-构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-dockerfile-构建镜像"}},[s._v("#")]),s._v(" 6.4 dockerfile 构建镜像")]),s._v(" "),a("p",[s._v("一般情况下，默认都基于文件名叫"),a("code",[s._v("Dockerfile")]),s._v("的文件构建镜像，当然也可以是自定义的文件名，使用"),a("code",[s._v("dockerfile")]),s._v("声明，不过这个选项只能声明文件名，文件所在路径还是要通过"),a("code",[s._v("centext")]),s._v("来声明。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" . "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相对当前 docker-compose.yml 文件所在目录")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Dockerfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alternate "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于名称为 Dockerfile-alternate 的文件构建镜像")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-5-container-name-容器名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-container-name-容器名称"}},[s._v("#")]),s._v(" 6.5 container_name 容器名称")]),s._v(" "),a("p",[a("code",[s._v("Compose")]),s._v("创建的容器默认生成的名称格式为："),a("code",[s._v("工程名称_服务条目名称_序号")]),s._v("。如果要使用自定义名称，使用"),a("code",[s._v("container_name")]),s._v("声明。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mycentos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mycentos7 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 容器名称，默认为"工程名称_服务条目名称_序号"')]),s._v("\n")])])]),a("p",[s._v("因为"),a("code",[s._v("Docker")]),s._v("容器名称必须是唯一的，所以如果指定了自定义名称，就不能将服务扩展至多个容器。这样做可能会导致错误。")]),s._v(" "),a("h3",{attrs:{id:"_6-6-depends-on-容器依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-depends-on-容器依赖"}},[s._v("#")]),s._v(" 6.6 depends_on 容器依赖")]),s._v(" "),a("p",[s._v("使用"),a("code",[s._v("Compose")]),s._v("最大的好处就是敲最少的命令做更多的事情，但一般项目容器启动的顺序是有要求的，如果直接从上到下启动容器，必然会因为容器依赖问题而启动失败。例如在没有启动数据库容器的情况下启动了"),a("code",[s._v("Web")]),s._v("应用容器，应用容器会因为找不到数据库而退出。"),a("code",[s._v("depends_on")]),s._v("就是用来解决容器依赖、启动先后问题的配置项。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" db\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n")])])]),a("p",[s._v("上述"),a("code",[s._v("YAML")]),s._v("文件定义的容器会先启动"),a("code",[s._v("db")]),s._v("和"),a("code",[s._v("redis")]),s._v("两个服务，最后才启动"),a("code",[s._v("web")]),s._v("服务。")]),s._v(" "),a("h3",{attrs:{id:"_6-7-ports-暴露端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-ports-暴露端口"}},[s._v("#")]),s._v(" 6.7 ports 暴露端口")]),s._v(" "),a("p",[s._v("容器对外暴露的端口，格式：左边宿主机端口:右边容器端口。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"80:80"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080:8080"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-8-expose-接受端口范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-expose-接受端口范围"}},[s._v("#")]),s._v(" 6.8 expose 接受端口范围")]),s._v(" "),a("p",[s._v("容器暴露的端口不映射到宿主机，只允许能被连接的服务访问。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("expose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"80"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-9-restart-重启策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-restart-重启策略"}},[s._v("#")]),s._v(" 6.9 restart 重启策略")]),s._v(" "),a("p",[s._v("容器重启策略，简单的理解就是"),a("code",[s._v("Docker")]),s._v("重启以后容器要不要一起启动")]),s._v(" "),a("ul",[a("li",[s._v("no：默认的重启策略，在任何情况下都不会重启容器；")]),s._v(" "),a("li",[s._v("on-failure：容器非正常退出时，比如退出状态为非0(异常退出)，才会重启容器；")]),s._v(" "),a("li",[s._v("always：容器总是重新启动，即使容器被手动停止了，当"),a("code",[s._v("Docker")]),s._v("重启时容器也还是会一起启动；")]),s._v(" "),a("li",[s._v("unless-stopped：容器总是重新启动，除非容器被停止（手动或其他方式），那么"),a("code",[s._v("Docker")]),s._v("重启时容器则不会启动。")])]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mynginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"80:80"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n")])])]),a("h3",{attrs:{id:"_6-10-environment-环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-environment-环境变量"}},[s._v("#")]),s._v(" 6.10 environment 环境变量")]),s._v(" "),a("p",[s._v("添加环境变量。可以使用数组也可以使用字典。布尔相关的值（true、false、yes、no）都需要用引号括起来，以确保 YML 解析器不会将它们转换为真或假。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("RUOYI_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" development\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SHOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SESSION_SECRET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])])]),a("p",[s._v("或者以下格式：")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" RUOYI_ENV=development\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" SHOW=true\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" SESSION_SECRET\n")])])]),a("h4",{attrs:{id:"_6-10-1-env-file-文件获取环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-1-env-file-文件获取环境变量"}},[s._v("#")]),s._v(" 6.10.1 env_file 文件获取环境变量")]),s._v(" "),a("p",[s._v("从文件中获取环境变量，可以指定一个或多个文件，其优先级低于"),a("code",[s._v("environment")]),s._v("指定的环境变量。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("env_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /opt/runtime_opts.env "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绝对路径")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./common.env "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相对路径，相对当前 docker-compose.yml 文件所在目录")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./apps/web.env "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相对路径，相对当前 docker-compose.yml 文件所在目录")]),s._v("\n")])])]),a("p",[s._v("注意：env 文件中的每一行需采用"),a("code",[s._v("键=值")]),s._v("格式。以"),a("code",[s._v("#")]),s._v("开头的行会被视为注释并被忽略。空行也会被忽略。")]),s._v(" "),a("h3",{attrs:{id:"_6-11-command-执行命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-11-command-执行命令"}},[s._v("#")]),s._v(" 6.11 command 执行命令")]),s._v(" "),a("p",[s._v("覆盖容器启动后默认执行的命令。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(' echo "helloworld"\n')])])]),a("p",[s._v("该命令也可以是一个列表。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-12-volumes-目录挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-12-volumes-目录挂载"}},[s._v("#")]),s._v(" 6.12 volumes 目录挂载")]),s._v(" "),a("p",[s._v("数据卷，用于实现目录挂载，支持指定目录挂载、匿名挂载、具名挂载。")]),s._v(" "),a("ul",[a("li",[s._v("指定目录挂载的格式为：左边宿主机目录:右边容器目录，或者左边宿主机目录:右边容器目录:读写权限；")]),s._v(" "),a("li",[s._v("匿名挂载格式为：容器目录即可，或者容器目录即可:读写权限；")]),s._v(" "),a("li",[s._v("具名挂载格式为：数据卷条目名称:容器目录，或者数据卷条目名称:容器目录:读写权限。")])]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 描述 Compose 文件的版本信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义服务，可以多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器时所需的镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql8 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 容器名称，默认为"工程名称_服务条目名称_序号"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机与容器的端口映射关系")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:3306"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左边宿主机端口:右边容器端口")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器时所需的环境变量")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绝对路径")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mydata/docker_mysql/data:/var/lib/mysql"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相对路径，相对当前 docker-compose.yml 文件所在目录")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" “./conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/mysql/conf.d“\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匿名挂载，匿名挂载只需要写容器目录即可，容器外对应的目录会在 /var/lib/docker/volume 中生成")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/mysql"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 具名挂载，就是给数据卷起了个名字，容器外对应的目录会在 /var/lib/docker/volume 中生成")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mysql-data-volume:/var/lib/mysql"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义数据卷，可以多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-data-volume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个具体数据卷的条目名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("volume "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 数据卷名称，默认为"工程名称_数据卷条目名称"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-13-network-mode-网络模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-13-network-mode-网络模式"}},[s._v("#")]),s._v(" 6.13 network_mode 网络模式")]),s._v(" "),a("p",[s._v("设置网络模式，类似 docker run 时添加的参数 --net host 或者 --network host 的用法")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bridge"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"service:[service name]"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container:[container name/id]"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-14-networks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-networks"}},[s._v("#")]),s._v(" 6.14 networks")]),s._v(" "),a("p",[s._v("配置容器连接的网络，引用顶级 networks 下的条目。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义服务，可以多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置容器连接的网络，引用顶级 networks 下的条目")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("net "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个具体网络的条目名称")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 定义网络，可以多个。如果不声明，默认会创建一个网络名称为"工程名称_default"的 bridge 网络')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx-net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个具体网络的条目名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("net "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 网络名称，默认为"工程名称_网络条目名称"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络模式，默认为 bridge")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-15-aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-aliases"}},[s._v("#")]),s._v(" 6.15  aliases")]),s._v(" "),a("p",[s._v("网络上此服务的别名。同一网络上的其他容器可以使用服务名或此别名连接到服务容器。同一服务在不同的网络上可以具有不同的别名。")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义服务，可以多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置容器连接的网络，引用顶级 networks 下的条目")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx-net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个具体网络的条目名称")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("aliases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务别名，可以多个")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" nginx1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同一网络上的其他容器可以使用服务名或此别名连接到服务容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 定义网络，可以多个。如果不声明，默认会创建一个网络名称为"工程名称_default"的 bridge 网络')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx-net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个具体网络的条目名称")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("net "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 网络名称，默认为"工程名称_网络条目名称"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络模式，默认为 bridge")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-16-links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-links"}},[s._v("#")]),s._v(" 6.16  links")]),s._v(" "),a("p",[s._v("服务之间可以使用服务名称相互访问，links 允许定义一个别名，从而使用该别名访问其它服务")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("version: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("\nservices:\n    web:\n        build: "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n        links:\n            - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"db:database"')]),s._v("\n    db:\n        image: postgres\n")])])]),a("ul",[a("li",[s._v("这样 Web 服务就可以使用 db 或 database 作为 hostname 访问 db 服务了")])]),s._v(" "),a("h2",{attrs:{id:"_7-compose-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-compose-常用命令"}},[s._v("#")]),s._v(" 7. Compose 常用命令")]),s._v(" "),a("p",[s._v("官方文档："),a("code",[s._v("https://docs.docker.com/compose/reference/overview/")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker-compose "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ARGS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("部分命令选项如下：")]),s._v(" "),a("ul",[a("li",[s._v("-f，--file：指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定，指定多个 yml；")]),s._v(" "),a("li",[s._v("-p, --project-name：指定工程名称，默认使用 docker-compose.yml 文件所在目录的名称；")]),s._v(" "),a("li",[s._v("-v：打印版本并退出；")]),s._v(" "),a("li",[s._v("--log-level：定义日志等级（DEBUG, INFO, WARNING, ERROR, CRITICAL）。")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-up"}},[s._v("#")]),s._v(" 7.1 up")]),s._v(" "),a("p",[a("code",[s._v("docker-compose up")]),s._v("创建并启动所有服务的容器。指定多个"),a("code",[s._v("yml")]),s._v("加"),a("code",[s._v("-f")]),s._v("选项。以守护进程模式运行加"),a("code",[s._v("-d")]),s._v("选项。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 前台启动")]),s._v("\ndocker-compose up\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台启动")]),s._v("\ndocker-compose up -d\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f 指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定，指定多个 yml")]),s._v("\ndocker-compose -f docker-compose.yml up -d \n")])])]),a("h3",{attrs:{id:"_7-2-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-logs"}},[s._v("#")]),s._v(" 7.2 logs")]),s._v(" "),a("p",[a("code",[s._v("docker-compose logs")]),s._v("查看服务容器的输出日志。默认情况下，"),a("code",[s._v("docker-compose")]),s._v("将对不同的服务输出使用不同的颜色来区分。可以通过"),a("code",[s._v("--no-color")]),s._v("来关闭颜色。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出日志，不同的服务输出使用不同的颜色来区分")]),s._v("\ndocker-compose logs\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跟踪日志输出")]),s._v("\ndocker-compose logs -f\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭颜色")]),s._v("\ndocker-compose logs --no-color\n")])])]),a("h3",{attrs:{id:"_7-3-ps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-ps"}},[s._v("#")]),s._v(" 7.3 ps")]),s._v(" "),a("p",[a("code",[s._v("docker-compose ps")]),s._v("列出工程中所有服务的容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出工程中所有服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出工程中指定服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" nginx\n")])])]),a("h3",{attrs:{id:"_7-4-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-run"}},[s._v("#")]),s._v(" 7.4 run")]),s._v(" "),a("p",[a("code",[s._v("docker-compose run")]),s._v("在指定服务容器上执行一个命令。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 在工程中指定服务的容器上执行 echo "helloworld"')]),s._v("\ndocker-compose run nginx "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_7-5-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-exec"}},[s._v("#")]),s._v(" 7.5 exec")]),s._v(" "),a("p",[a("code",[s._v("docker-compose exec")]),s._v("进入服务容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入工程中指定服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" nginx "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当一个服务拥有多个容器时，可通过 --index 参数进入到该服务下的任何容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" nginx "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),a("h3",{attrs:{id:"_7-6-pause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-pause"}},[s._v("#")]),s._v(" 7.6 pause")]),s._v(" "),a("p",[a("code",[s._v("docker-compose pause")]),s._v("暂停服务容器")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停工程中所有服务的容器")]),s._v("\ndocker-compose pause\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停工程中指定服务的容器")]),s._v("\ndocker-compose pause nginx\n")])])]),a("h3",{attrs:{id:"_7-7-unpause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-unpause"}},[s._v("#")]),s._v(" 7.7 unpause")]),s._v(" "),a("p",[a("code",[s._v("docker-compose unpause")]),s._v("恢复服务容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 恢复工程中所有服务的容器")]),s._v("\ndocker-compose unpause\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 恢复工程中指定服务的容器")]),s._v("\ndocker-compose unpause nginx\n")])])]),a("h3",{attrs:{id:"_7-8-restart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-8-restart"}},[s._v("#")]),s._v(" 7.8 restart")]),s._v(" "),a("p",[a("code",[s._v("docker-compose restart")]),s._v("重启服务容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启工程中所有服务的容器")]),s._v("\ndocker-compose restart\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启工程中指定服务的容器")]),s._v("\ndocker-compose restart nginx\n")])])]),a("h3",{attrs:{id:"_7-9-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-9-start"}},[s._v("#")]),s._v(" 7.9 start")]),s._v(" "),a("p",[a("code",[s._v("docker-compose start")]),s._v("启动服务容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动工程中所有服务的容器")]),s._v("\ndocker-compose start\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动工程中指定服务的容器")]),s._v("\ndocker-compose start nginx\n")])])]),a("h3",{attrs:{id:"_7-10-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-10-stop"}},[s._v("#")]),s._v(" 7.10 stop")]),s._v(" "),a("p",[a("code",[s._v("docker-compose stop")]),s._v("停止服务容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止工程中所有服务的容器")]),s._v("\ndocker-compose stop\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止工程中指定服务的容器")]),s._v("\ndocker-compose stop nginx\n")])])]),a("h3",{attrs:{id:"_7-11-kill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-11-kill"}},[s._v("#")]),s._v(" 7.11 kill")]),s._v(" "),a("p",[a("code",[s._v("docker-compose kill")]),s._v("通过发送"),a("code",[s._v("SIGKILL")]),s._v("信号停止指定服务的容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过发送 SIGKILL 信号停止工程中指定服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" nginx\n")])])]),a("h3",{attrs:{id:"_7-12-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-12-rm"}},[s._v("#")]),s._v(" 7.12 rm")]),s._v(" "),a("p",[s._v("docker-compose rm 删除服务（停止状态）容器。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有（停止状态）服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先停止所有服务的容器，再删除所有服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -s\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不询问是否删除，直接删除")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除服务容器挂载的数据卷")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除工程中指定服务的容器")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -sv nginx\n")])])]),a("h3",{attrs:{id:"_7-13-down"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-13-down"}},[s._v("#")]),s._v(" 7.13 down")]),s._v(" "),a("p",[s._v("停止并删除所有服务的容器、网络、镜像、数据卷。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止并删除工程中所有服务的容器、网络")]),s._v("\ndocker-compose stop\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止并删除工程中所有服务的容器、网络、镜像")]),s._v("\ndocker-compose down --rmi all\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止并删除工程中所有服务的容器、网络、数据卷")]),s._v("\ndocker-compose down -v\n")])])]),a("h3",{attrs:{id:"_7-14-images"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-14-images"}},[s._v("#")]),s._v(" 7.14 images")]),s._v(" "),a("p",[a("code",[s._v("docker-compose images")]),s._v("打印服务容器所对应的镜像。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印所有服务的容器所对应的镜像")]),s._v("\ndocker-compose images\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印指定服务的容器所对应的镜像")]),s._v("\ndocker-compose images nginx\n")])])]),a("h3",{attrs:{id:"_7-15-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-15-port"}},[s._v("#")]),s._v(" 7.15 port")]),s._v(" "),a("p",[a("code",[s._v("docker-compose port")]),s._v("打印指定服务容器的某个端口所映射的宿主机端口。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker-compose port nginx "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])])]),a("h3",{attrs:{id:"_7-16-top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-16-top"}},[s._v("#")]),s._v(" 7.16 top")]),s._v(" "),a("p",[a("code",[s._v("docker-compose top")]),s._v("显示正在运行的进程。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示工程中所有服务的容器正在运行的进程")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示工程中指定服务的容器正在运行的进程")]),s._v("\ndocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" nginx\n")])])]),a("h3",{attrs:{id:"_7-17-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-17-pull"}},[s._v("#")]),s._v(" 7.17 pull")]),s._v(" "),a("p",[a("code",[s._v("docker-compose pull")]),s._v("拉取服务依赖的镜像。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取工程中所有服务依赖的镜像")]),s._v("\ndocker-compose pull\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取工程中 nginx 服务依赖的镜像")]),s._v("\ndocker-compose pull nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像过程中不打印拉取进度信息")]),s._v("\ndocker-compose pull -q\n")])])]),a("h3",{attrs:{id:"_7-18-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-18-config"}},[s._v("#")]),s._v(" 7.18 config")]),s._v(" "),a("p",[a("code",[s._v("docker-compose config -q")]),s._v("验证"),a("code",[s._v("docker-compose.yml")]),s._v("文件。当配置正确时，不输出任何内容，当配置错误时，输出错误信息。")]),s._v(" "),a("h3",{attrs:{id:"_7-19-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-19-help"}},[s._v("#")]),s._v(" 7.19 help")]),s._v(" "),a("p",[a("code",[s._v("docker-compose -help")]),s._v("查看帮助。")]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/658911a8cff3",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker：Docker Compose 详解"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"http://doc.ruoyi.vip/ruoyi-cloud/cloud/dokcer.html#docker-compose",target:"_blank",rel:"noopener noreferrer"}},[s._v("若依官方文档"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);