(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{645:function(s,t,a){"use strict";a.r(t);var n=a(26),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-数据类型-列类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据类型-列类型"}},[s._v("#")]),s._v(" MySQL-数据类型(列类型)")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 数据类型（列类型） */")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 数值类型\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- a. 整型 ----------")]),s._v("\n    类型         字节     范围（有符号位）\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tinyint")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("字节    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v("      无符号位："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("smallint")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("字节    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32768")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32767")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mediumint")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("字节    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8388608")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8388607")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bigint")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("字节\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  M表示总位数\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 默认存在符号位，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" 属性修改\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 显示宽度，如果某个数不够定义字段时置的位数，则前面以"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("补填，zerofill 属性修改\n        例："),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   插入一个数"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("，补填后为"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'00123'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 在满足要求的情况下，越小越好。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("表示"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("值真，"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("表示"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v("值假。MySQL没有布尔类型，通过整型"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("和"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("表示。常用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("表示布尔型。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- b. 浮点型 ----------")]),s._v("\n    类型             字节     范围\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("单精度"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("双精度"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("字节\n    浮点型既支持符号位 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" 属性，也支持显示宽度 zerofill 属性。\n        不同于整型，前后均会补填"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.")]),s._v("\n    定义浮点型时，需指定总位数和小数位数。\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        M表示总位数，D表示小数位数。\n        M和D的大小会决定浮点数的范围。不同于整型的固定范围。\n        M既表示总位数（不包括小数点和正负号），也表示显示宽度（所有显示符号均包括）\n        支持科学计数法表示。\n        浮点数表示近似值。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- c. 定点数 ----------")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("decimal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可变长度")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("decimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   M也表示总位数，D表示小数位数。\n    保存一个精确的数值，不会发生数据的改变，不同于浮点数的四舍五入。\n    将浮点数转换为字符串来保存，每"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("位数字保存为"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("个字节。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 字符串类型\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- a. char, varchar ----------")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("    定长字符串，速度快，但浪费空间\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v(" 变长字符串，速度慢，但节省空间\n    M表示能存储的最大长度，此长度是字符数，非字节数。\n    不同的编码，所占用的空间不同。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("最多"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v("个字符，与编码无关。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("最多"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("字符，与编码有关。\n    一条有效记录最大不能超过"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("个字节。\n        utf8 最大为"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21844")]),s._v("个字符，gbk 最大为"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32766")]),s._v("个字符，latin1 最大为"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65532")]),s._v("个字符\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v(" 是变长的，需要利用存储空间保存 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v(" 的长度，如果数据小于"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v("个字节，则采用一个字节来保存长度，反之需要两个字节来保存。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v(" 的最大有效长度由最大行大小和使用的字符集确定。\n    最大有效长度是"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65532")]),s._v("字节，因为在"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v("存字符串时，第一个字节是空的，不存在任何数据，然后还需两个字节来存放字符串的长度，所以有效长度是"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65532")]),s._v("字节。\n    例：若一个表定义为 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" tb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 问N的最大值是多少？ 答："),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- b. blob, text ----------")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("blob")]),s._v(" 二进制字符串（字节字符串）\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tinyblob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("blob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mediumblob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("longblob")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),s._v(" 非二进制字符串（字符字符串）\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tinytext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mediumtext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("longtext")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),s._v(" 在定义时，不需要定义长度，也不会计算总长度。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),s._v(" 类型在定义时，不可给"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v("值\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- c. binary, varbinary ----------")]),s._v("\n    类似于"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),s._v("，用于保存二进制字符串，也就是保存字节字符串而非字符字符串。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),s._v(" 对应 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("binary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varbinary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("blob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 日期时间类型\n    一般用整型保存时间戳，因为PHP可以很方便的将时间戳进行格式化。\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("字节    日期及时间     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" 到 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("字节    日期         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" 到 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("timestamp")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节    时间戳        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19700101000000")]),s._v(" 到 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2038")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("03")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("07")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("字节    时间         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("838")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v(" 到 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("838")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("字节    年份         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1901")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2155")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v("    YYYY"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("MM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("DD hh:mm:ss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("timestamp")]),s._v("   YY"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("MM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("DD hh:mm:ss\n            YYYYMMDDhhmmss\n            YYMMDDhhmmss\n            YYYYMMDDhhmmss\n            YYMMDDhhmmss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),s._v("        YYYY"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("MM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("DD\n            YY"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("MM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("DD\n            YYYYMMDD\n            YYMMDD\n            YYYYMMDD\n            YYMMDD\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v("        hh:mm:ss\n            hhmmss\n            hhmmss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),s._v("        YYYY\n            YY\n            YYYY\n            YY\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 枚举和集合\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 枚举(enum) ----------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    在已知的值中进行单选。最大数量为"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535.")]),s._v("\n    枚举值在保存时，以"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("个字节的整型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("smallint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("保存。每个枚举值，按保存的位置顺序，从"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("开始逐一递增。\n    表现为字符串类型，存储却是整型。\n    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("值的索引是"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("。\n    空字符串错误值的索引值是"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 集合（set） ----------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" tab "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" gender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'无'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tab "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男, 女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    最多可以有"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("个不同的成员。以"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bigint")]),s._v("存储，共"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("个字节。采取位运算的形式。\n    当创建表时，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v("成员值的尾部空格将自动被删除。\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://javaguide.cn/database/mysql/a-thousand-lines-of-mysql-study-notes/#",target:"_blank",rel:"noopener noreferrer"}},[s._v("一千行 MySQL 学习笔记"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);