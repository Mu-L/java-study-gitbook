(window.webpackJsonp=window.webpackJsonp||[]).push([[1091],{1469:function(t,e,r){"use strict";r.r(e);var _=r(26),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"git工作流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git工作流"}},[t._v("#")]),t._v(" git工作流")]),t._v(" "),r("h2",{attrs:{id:"_1-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),r("p",[t._v("Git 有多种工作流方式，我们接下来就介绍几种常见的工作流，以便大家选择最适合自己的方式。")]),t._v(" "),r("h2",{attrs:{id:"_2-常见工作流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见工作流"}},[t._v("#")]),t._v(" 2. 常见工作流")]),t._v(" "),r("h3",{attrs:{id:"_2-1-主干开发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-主干开发"}},[t._v("#")]),t._v(" 2.1 主干开发")]),t._v(" "),r("p",[t._v("严格意义上说他并不算工作流，所有提交都在主干上")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211209213253441.png",alt:"image-20211209213253441"}})]),t._v(" "),r("h4",{attrs:{id:"_2-1-1-优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-优势"}},[t._v("#")]),t._v(" 2.1.1 优势")]),t._v(" "),r("ul",[r("li",[t._v("方便，所有都提交到master")]),t._v(" "),r("li",[t._v("适合一些小组件/工具")])]),t._v(" "),r("h4",{attrs:{id:"_2-1-2-缺陷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-缺陷"}},[t._v("#")]),t._v(" 2.1.2 缺陷")]),t._v(" "),r("ul",[r("li",[t._v("缺乏有效管理")])]),t._v(" "),r("h3",{attrs:{id:"_2-2-git-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-git-flow"}},[t._v("#")]),t._v(" 2.2 Git Flow")]),t._v(" "),r("p",[r("code",[t._v("Git工作流")]),t._v(" 是最广为人知的工作流。由"),r("code",[t._v("Vincent Driessen")]),t._v(" 在2010年所发明，这种工作流建立在两个具有永久生命周期的分支基础之上：")]),t._v(" "),r("ul",[r("li",[t._v("master分支 - 对应生产环境的线上代码。所有开发代码都会在某个时间点合并到master分支。")]),t._v(" "),r("li",[t._v("develop分支 - 对应的是预生产的代码。当功能分支开发完毕之后，会被合并到develop分支。")])]),t._v(" "),r("p",[t._v("与之并行的，是在开发周期之内，还会使用一些其他类型的分支以便支持开发流程：")]),t._v(" "),r("ul",[r("li",[t._v("feature-* ( * 表示通配符，下同) 分支 — 功能分支用来开发下次发布包含的新功能。这些分支应当都是从develop分支派生出来，然后最终也应该合并回develop分支。")]),t._v(" "),r("li",[t._v("hotfix-* 分支 — 当master分支中含有不应出现的状况时，则有必要派生出hotfix分支对master分支进行紧急修复。这些分支应当派生自master 分支，并且最终应当同时合并回master 和develop 分支。")]),t._v(" "),r("li",[t._v("release-* 分支 — release 分支用于准备一次新的生产环境版本更新。创建release-*分支用来修复一些在测试环境未发现的小BUG，以及更新此版本的原信息。其应当派生自develop分支，并且最终同时合并回master 分支和 develop分支。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211209213326278.png",alt:"image-20211209213326278"}})]),t._v(" "),r("h4",{attrs:{id:"_2-2-1-优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-优势"}},[t._v("#")]),t._v(" 2.2.1 "),r("strong",[t._v("优势")])]),t._v(" "),r("ul",[r("li",[t._v("在项目周期之内，该工作流保证任何时刻两个主要分支都是处于纯净状态的")]),t._v(" "),r("li",[t._v("由于遵循系统化的模式，因此分支命名容易理解")]),t._v(" "),r("li",[t._v("大多数Git工具都支持该工作流的"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/nvie/gitflow",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展工具"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("当项目中需要同时维护多个生产版本时，该工作流模式非常理想")])]),t._v(" "),r("h4",{attrs:{id:"_2-2-2-缺陷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-缺陷"}},[t._v("#")]),t._v(" 2.2.2 "),r("strong",[t._v("缺陷")])]),t._v(" "),r("ul",[r("li",[t._v("Git 的历史记录将变得异常混乱，可读性很差")]),t._v(" "),r("li",[t._v("master / develop 分支的割裂使CI/CD流程变得更加困难")]),t._v(" "),r("li",[t._v("当项目维护单一生产环境版本时，该工作流则不适用")])]),t._v(" "),r("h3",{attrs:{id:"_2-3-github-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-github-flow"}},[t._v("#")]),t._v(" 2.3 "),r("strong",[t._v("GitHub Flow")])]),t._v(" "),r("p",[t._v("GitHub 工作流是一个轻型的工作流，它是GitHub 在2011年 创建，其工作流遵循以下6个原则：")]),t._v(" "),r("ol",[r("li",[t._v("任何时刻的master分支代码都是可以用来部署的")]),t._v(" "),r("li",[t._v("任何新变更都需要从master派生出一个分支，并且为其起一个描述新变更内容的名字：比如 new-oauth2-scopes")]),t._v(" "),r("li",[t._v("在本地提交该新分支变更，并且应经常性的向服务器端该同名分支推送变更")]),t._v(" "),r("li",[t._v("当你需要帮助、反馈，或认为新分支可以合并的时候，新建一个"),r("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//help.github.com/send-pull-requests/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull request"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("只有在其他人review通过之后，新分支才允许合并到 "),r("code",[t._v("master")]),t._v(" 分支")]),t._v(" "),r("li",[t._v("一旦新分支被合并推送至"),r("code",[t._v("master")]),t._v("分支，master分支应当立即进行部署")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211209213349934.png",alt:"image-20211209213349934"}})]),t._v(" "),r("h4",{attrs:{id:"_2-3-1-优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-优势"}},[t._v("#")]),t._v(" 2.3.1 "),r("strong",[t._v("优势")])]),t._v(" "),r("ul",[r("li",[t._v("该工作流对于CI/CD流程友好")]),t._v(" "),r("li",[t._v("是Git工作流的一种简版替换")]),t._v(" "),r("li",[t._v("当项目维护单一生产环境版本时，该工作流适用")])]),t._v(" "),r("h4",{attrs:{id:"_2-3-2-缺陷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-缺陷"}},[t._v("#")]),t._v(" 2.3.2 缺陷")]),t._v(" "),r("ul",[r("li",[t._v("生产环境对应的代码极易处于不稳定状态")]),t._v(" "),r("li",[t._v("对于依赖"),r("a",{attrs:{href:"https://www.zhihu.com/search?q=%E5%8F%91%E5%B8%83%E8%AE%A1%E5%88%92&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A434078984%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("发布计划"),r("OutboundLink")],1),t._v("的项目无法充分支持")]),t._v(" "),r("li",[t._v("该工作流并不涉及关于部署，环境，发布和问题等方面的解决方案")]),t._v(" "),r("li",[t._v("当项目维护多生产环境版本时，该工作流不适用")])]),t._v(" "),r("h3",{attrs:{id:"_2-4-gitlab-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-gitlab-flow"}},[t._v("#")]),t._v(" 2.4 "),r("strong",[t._v("GitLab Flow")])]),t._v(" "),r("p",[t._v("GitLab工作流由"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//about.gitlab.com/2014/09/29/gitlab-flow/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab"),r("OutboundLink")],1),t._v("创建于2014年。这种工作流将"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Feature-driven_development",target:"_blank",rel:"noopener noreferrer"}},[t._v("功能驱动的开发模式"),r("OutboundLink")],1),t._v("与问题跟踪结合在一起。与GitHub工作流最大的不同，是GitLab工作流新创建了与环境相关的分支（比如，"),r("code",[t._v("staging")]),t._v("分支和"),r("code",[t._v("production")]),t._v("分支），适用于每次合并功能分支后不需马上部署至生产环境的项目（如SaaS软件，移动软件项目等）。")]),t._v(" "),r("p",[t._v("GitLab工作流遵循以下11条原则：")]),t._v(" "),r("ol",[r("li",[t._v("使用功能分支进行开发，而不是直接在"),r("code",[t._v("master")]),t._v("分支上提交代码 （如果你的开发主分支是 "),r("code",[t._v("master")]),t._v("的话，下同）")]),t._v(" "),r("li",[t._v("测试每一次commit，而不仅仅是对"),r("code",[t._v("master")]),t._v("分支进行测试")]),t._v(" "),r("li",[t._v("在所有commits上运行自动化测试（如果你的测试脚本运行时间超过5分钟，就让他们并行）")]),t._v(" "),r("li",[t._v("在"),r("a",{attrs:{href:"https://www.zhihu.com/search?q=%E5%90%88%E5%B9%B6%E4%BB%A3%E7%A0%81&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A434078984%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("合并代码"),r("OutboundLink")],1),t._v("之前进行code review，而不是在合并之后")]),t._v(" "),r("li",[t._v("以分支名或者tag为准进行自动化的部署")]),t._v(" "),r("li",[t._v("tag由人来设定，而不是CI")]),t._v(" "),r("li",[t._v("发布版本应建立在tag上")]),t._v(" "),r("li",[t._v("已push的commits永远不要进行rebase")]),t._v(" "),r("li",[t._v("所有人从"),r("code",[t._v("master")]),t._v("派生新分支，最终合并回`master")]),t._v(" "),r("li",[t._v("修复bug时应该优先修复"),r("code",[t._v("master")]),t._v("分支的代码，修复之后再cherry-pick到线上分支")]),t._v(" "),r("li",[t._v("commit messages 要有意义")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211209213428242.png",alt:"image-20211209213428242"}})]),t._v(" "),r("h4",{attrs:{id:"_2-4-1-优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-优势"}},[t._v("#")]),t._v(" 2.4.1 "),r("strong",[t._v("优势")])]),t._v(" "),r("ul",[r("li",[t._v("相对于前两种工作流，GitLab工作流定义了如何进行CI和CD流程的整合")]),t._v(" "),r("li",[t._v("提交历史会非常清爽，历史信息看上去会更具可读性")]),t._v(" "),r("li",[t._v("当项目维护单一生产环境版本时，该工作流适用")])]),t._v(" "),r("h4",{attrs:{id:"_2-4-2-缺陷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-缺陷"}},[t._v("#")]),t._v(" 2.4.2 "),r("strong",[t._v("缺陷")])]),t._v(" "),r("ul",[r("li",[t._v("比GitHub工作流更加复杂")]),t._v(" "),r("li",[t._v("当项目维护多生产环境版本时，将会变得和Git Flow一样复杂")])]),t._v(" "),r("h3",{attrs:{id:"_2-5-one-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-one-flow"}},[t._v("#")]),t._v(" 2.5 "),r("strong",[t._v("One Flow")])]),t._v(" "),r("p",[t._v("One Flow 最初在"),r("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//endoflineblog.com/gitflow-considered-harmful",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitFlow considered harmful by Adam Ruka, 2015"),r("OutboundLink")],1),t._v("这篇文章中提出，作为Git Flow的另一种选择。使用One Flow需要满足的最重要的条件，是生产版本的每一次更新都基于前一生产版本，与Git Flow最大的区别是没有"),r("code",[t._v("develop")]),t._v("这一分支。")]),t._v(" "),r("h4",{attrs:{id:"_2-5-1-优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-优势"}},[t._v("#")]),t._v(" 2.5.1 "),r("strong",[t._v("优势")])]),t._v(" "),r("ul",[r("li",[t._v("提交历史会非常清爽，历史信息看上去会更具可读性")]),t._v(" "),r("li",[t._v("灵活的团队协作机制")]),t._v(" "),r("li",[t._v("当项目维护单一生产环境版本时，该工作流适用")])]),t._v(" "),r("h4",{attrs:{id:"_2-5-2-缺陷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-缺陷"}},[t._v("#")]),t._v(" 2.5.2 "),r("strong",[t._v("缺陷")])]),t._v(" "),r("ul",[r("li",[t._v("自动化CI/CD能力的项目慎用")]),t._v(" "),r("li",[t._v("功能分支不明确，不适用"),r("a",{attrs:{href:"https://www.zhihu.com/search?q=%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A434078984%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("持续集成"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("当项目维护多生产环境版本时，该工作流不适用")])]),t._v(" "),r("h2",{attrs:{id:"参考文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/434078984",target:"_blank",rel:"noopener noreferrer"}},[t._v("四种常见的Git工作流"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);