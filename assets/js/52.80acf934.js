(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{427:function(t,a,s){"use strict";s.r(a);var e=s(26),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"hutool的io包之ioutil-源码阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hutool的io包之ioutil-源码阅读"}},[t._v("#")]),t._v(" Hutool的IO包之IoUtil 源码阅读")]),t._v(" "),s("h2",{attrs:{id:"_1-背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[t._v("#")]),t._v(" 1. 背景")]),t._v(" "),s("p",[t._v("在项目中需要频繁使用IO库，java 的io 包还是比较繁琐的，往往一个读写操作就需要一大串的try_catch操作，用过Apache的Commons-IO ，用起来也不错，但hutool的代码会更符合国人一些，注释也更加完善。")]),t._v(" "),s("p",[t._v("以下文章内容主要是官网内容和查看hutool 源码的一些学习总结")]),t._v(" "),s("h2",{attrs:{id:"_2-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-概述"}},[t._v("#")]),t._v(" 2. 概述")]),t._v(" "),s("blockquote",[s("p",[t._v("IO的操作包括"),s("strong",[t._v("读")]),t._v("和"),s("strong",[t._v("写")]),t._v("，应用场景包括网络操作和文件操作。IO操作在Java中是一个较为复杂的过程，我们在面对不同的场景时，要选择不同的"),s("code",[t._v("InputStream")]),t._v("和"),s("code",[t._v("OutputStream")]),t._v("实现来完成这些操作。而如果想读写字节流，还需要"),s("code",[t._v("Reader")]),t._v("和"),s("code",[t._v("Writer")]),t._v("的各种实现类。这些繁杂的实现类，一方面给我我们提供了更多的灵活性，另一方面也增加了复杂性。")])]),t._v(" "),s("p",[t._v("io包的封装主要针对流、文件的读写封装，主要以工具类为主，提供常用功能的封装，这包括：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("IoUtil")]),t._v(" 流操作工具类")]),t._v(" "),s("li",[s("code",[t._v("FileUtil")]),t._v(" 文件读写和操作的工具类。")]),t._v(" "),s("li",[s("code",[t._v("FileTypeUtil")]),t._v(" 文件类型判断工具类")]),t._v(" "),s("li",[s("code",[t._v("WatchMonitor")]),t._v(" 目录、文件监听，封装了JDK1.7中的WatchService")]),t._v(" "),s("li",[s("code",[t._v("ClassPathResource")]),t._v("针对ClassPath中资源的访问封装")]),t._v(" "),s("li",[s("code",[t._v("FileReader")]),t._v(" 封装文件读取")]),t._v(" "),s("li",[s("code",[t._v("FileWriter")]),t._v(" 封装文件写入")])]),t._v(" "),s("h2",{attrs:{id:"_3-io工具类-ioutil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-io工具类-ioutil"}},[t._v("#")]),t._v(" 3. IO工具类-IoUtil")]),t._v(" "),s("blockquote",[s("p",[t._v("IO工具类的存在主要针对InputStream、OutputStream、Reader、Writer封装简化，并对NIO相关操作做封装简化。总体来说，Hutool对IO的封装，主要是工具层面，我们努力做到在便捷、性能和灵活之间找到最好的平衡点。")])]),t._v(" "),s("h3",{attrs:{id:"_3-1-拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-拷贝"}},[t._v("#")]),t._v(" 3.1 拷贝")]),t._v(" "),s("p",[t._v("流的读写可以总结为从输入流读取，从输出流写出，这个过程我们定义为"),s("strong",[t._v("拷贝")]),t._v("。这个是一个基本过程，也是文件、流操作的基础。")]),t._v(" "),s("p",[t._v("以文件流拷贝为例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedInputStream")]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d:/test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedOutputStream")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d:/test2.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" copySize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IoUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IoUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFAULT_BUFFER_SIZE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Copy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("clipboardErrorCopied")]),t._v("\n")])])]),s("p",[t._v("copy方法同样针对Reader、Writer、Channel等对象有一些重载方法，并提供可选的缓存大小。默认的，缓存大小为"),s("code",[t._v("1024")]),t._v("个字节，如果拷贝大文件或流数据较大，可以适当调整这个参数。")]),t._v(" "),s("p",[t._v("针对NIO，提供了"),s("code",[t._v("copyByNIO")]),t._v("方法")]),t._v(" "),s("h4",{attrs:{id:"_3-1-1-源码操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-源码操作"}},[t._v("#")]),t._v(" 3.1.1 源码操作")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016202407321.png",alt:"image-20211016202407321"}})]),t._v(" "),s("p",[t._v("可以看出底层还是还是一个标准的io读取操作")]),t._v(" "),s("h3",{attrs:{id:"_3-2-读取流中的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-读取流中的内容"}},[t._v("#")]),t._v(" 3.2 读取流中的内容")]),t._v(" "),s("p",[t._v("读取流中的内容总结下来，可以分为read方法和readXXX方法。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("read")]),t._v("方法有诸多的重载方法，根据参数不同，可以读取不同对象中的内容，这包括：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("InputStream")])]),t._v(" "),s("li",[s("code",[t._v("Reader")])]),t._v(" "),s("li",[s("code",[t._v("FileChannel")])])]),t._v(" "),s("p",[t._v("这三个重载大部分返回String字符串，为字符流读取提供极大便利。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("readXXX")]),t._v("方法主要针对返回值做一些处理，例如：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("readBytes")]),t._v(" 返回byte数组（读取图片等）")]),t._v(" "),s("li",[s("code",[t._v("readHex")]),t._v(" 读取16进制字符串")]),t._v(" "),s("li",[s("code",[t._v("readObj")]),t._v(" 读取序列化对象（反序列化）")]),t._v(" "),s("li",[s("code",[t._v("readLines")]),t._v(" 按行读取")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("toStream")]),t._v("方法则是将某些对象转换为流对象，便于在某些情况下操作：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("String")]),t._v(" 转换为"),s("code",[t._v("ByteArrayInputStream")])]),t._v(" "),s("li",[s("code",[t._v("File")]),t._v(" 转换为"),s("code",[t._v("FileInputStream")])])]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-源码"}},[t._v("#")]),t._v(" 3.2.1 源码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016203320813.png",alt:"image-20211016203320813"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016203429377.png",alt:"image-20211016203429377"}})]),t._v(" "),s("ul",[s("li",[t._v("封装 try-catch")]),t._v(" "),s("li",[t._v("直接关闭io流")]),t._v(" "),s("li",[t._v("FastByteArrayOutputStream\n"),s("ul",[s("li",[t._v("基于快速缓冲FastByteBuffer的OutputStream，随着数据的增长自动扩充缓冲区")]),t._v(" "),s("li",[t._v("这种设计避免重新分配内存块而是分配新增的缓冲区，缓冲区不会被GC，数据也不会被拷贝到其他缓冲区。")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-3-写入到流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-写入到流"}},[t._v("#")]),t._v(" 3.3 写入到流")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("IoUtil.write")]),t._v("方法有两个重载方法，一个直接调用"),s("code",[t._v("OutputStream.write")]),t._v("方法，另一个用于将对象转换为字符串（调用toString方法），然后写入到流中。")]),t._v(" "),s("li",[s("code",[t._v("IoUtil.writeObjects")]),t._v(" 用于将可序列化对象序列化后写入到流中。")])]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("方法并没有提供writeXXX，需要自己转换为String或byte[]。")]),t._v(" "),s("h4",{attrs:{id:"_3-3-1-源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-源码"}},[t._v("#")]),t._v(" 3.3.1 源码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016203711351.png",alt:"image-20211016203711351"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20211016203749635.png",alt:"image-20211016203749635"}})]),t._v(" "),s("ul",[s("li",[t._v("主要就是帮我们做了try-catch 操作,实际上还是java的write")])]),t._v(" "),s("h3",{attrs:{id:"_3-4-关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-关闭"}},[t._v("#")]),t._v(" 3.4 关闭")]),t._v(" "),s("p",[t._v("对于IO操作来说，使用频率最高（也是最容易被遗忘）的就是"),s("code",[t._v("close")]),t._v("操作，好在Java规范使用了优雅的"),s("code",[t._v("Closeable")]),t._v("接口，这样我们只需简单封装调用此接口的方法即可。")]),t._v(" "),s("p",[t._v("关闭操作会面临两个问题：")]),t._v(" "),s("ol",[s("li",[t._v("被关闭对象为空")]),t._v(" "),s("li",[t._v("对象关闭失败（或对象已关闭）")])]),t._v(" "),s("p",[t._v("在JDK1.7中，提供了"),s("code",[t._v("AutoCloseable")]),t._v("接口，在"),s("code",[t._v("IoUtil")]),t._v("中同样提供相应的重载方法，在使用中并不能感觉到有哪些不同。")]),t._v(" "),s("h4",{attrs:{id:"_3-4-1-源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-源码"}},[t._v("#")]),t._v(" 3.4.1 源码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016204613353.png",alt:"image-20211016204613353"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211016204645360.png",alt:"image-20211016204645360"}})]),t._v(" "),s("p",[t._v("正如文档所说，做的事情")]),t._v(" "),s("ol",[s("li",[t._v("被关闭对象为空")]),t._v(" "),s("li",[t._v("对象关闭失败（或对象已关闭）")])])])}),[],!1,null,null,null);a.default=_.exports}}]);