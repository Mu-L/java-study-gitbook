(window.webpackJsonp=window.webpackJsonp||[]).push([[627],{1003:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"统一代码风格工具editorconfig"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一代码风格工具editorconfig"}},[t._v("#")]),t._v(" 统一代码风格工具editorConfig")]),t._v(" "),s("h2",{attrs:{id:"_1-背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[t._v("#")]),t._v(" 1. 背景")]),t._v(" "),s("p",[t._v("团队中有多人进行项目开发时，每个人可能喜欢的编辑器不同，有人喜欢webstrom、有人用VsCode、还有人用sublime。")]),t._v(" "),s("p",[t._v("我们无法强迫开发者使用某种开发工具，那么我们如何让开发者都遵循统一的代码规范呢？")]),t._v(" "),s("p",[t._v("这时候我们就需要editorConfig了，"),s("strong",[t._v("在editorConfig里的配置的代码规范优先级是高于编辑器默认的代码格式化规则")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_2-editorconfig-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-editorconfig-简介"}},[t._v("#")]),t._v(" 2. editorConfig 简介")]),t._v(" "),s("p",[t._v("editorConfig不是什么软件，而是一个名称为.editorconfig的自定义文件。该文件用来定义项目的编码规范，编辑器的行为会与.editorconfig 文件中定义的一致，并且"),s("strong",[t._v("其优先级比编辑器自身的设置要高")])]),t._v(" "),s("p",[t._v("当打开一个文件时，EditorConfig插件会在打开文件的目录和其每一级父目录查找.editorconfig文件，直到有一个配置文件root=true")]),t._v(" "),s("p",[t._v("EditorConfig的配置文件是从上往下读取的并且最近的EditorConfig配置文件会被最先读取. 匹配EditorConfig配置文件中的配置项会按照读取顺序被应用, 所以最近的配置文件中的配置项拥有优先权")]),t._v(" "),s("p",[s("strong",[t._v("如果.editorconfig文件没有进行某些配置，则使用编辑器默认的设置")])]),t._v(" "),s("h2",{attrs:{id:"_3-配置-editorconfig"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置-editorconfig"}},[t._v("#")]),t._v(" 3. 配置.editorconfig")]),t._v(" "),s("p",[t._v("在当前项目根目录下添加"),s("code",[t._v(".editorconfig")]),t._v("文件")]),t._v(" "),s("p",[t._v("editorconfig文件是定义一些格式化规则（此规则并不会被vscode直接解析）")]),t._v(" "),s("h3",{attrs:{id:"_3-1-官网的一个配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-官网的一个配置"}},[t._v("#")]),t._v(" 3.1 官网的一个配置")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# EditorConfig is awesome"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("EditorConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org\n\n# top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("most EditorConfig file 表示是最顶层的配置文件，发现设为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("时，才会停止查找"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("editorconfig文件\nroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n# Unix"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("style newlines "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" a newline ending every file 对于所有的文件  始终在文件末尾插入一个新行\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nend_of_line "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lf\ninsert_final_newline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n# Matches multiple files "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" brace expansion notation\n# Set "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" charset  对于所有的js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("py文件，设置文件字符集为utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("py"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ncharset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n\n# "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" space indentation 控制py文件类型的缩进大小\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nindent_style "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" space\nindent_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n# Tab "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indentation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no size specified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 设置某中文件的缩进风格为tab Makefile未指明\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Makefile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nindent_style "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tab\n\n# Indentation override "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" under lib directory  设置在lib目录下所有"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("的缩进为\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**.js]\nindent_style = space\nindent_size = 2\n\n# Matches the exact files either package.json or .travis.yml 设置确切文件 package.json/.travis/.yml的缩进类型\n[{package.json,.travis.yml}]\nindent_style = space\nindent_size = 2\n\n\n")])])])]),s("h2",{attrs:{id:"_4-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-语法"}},[t._v("#")]),t._v(" 4. 语法")]),t._v(" "),s("p",[t._v("editorConfig配置文件需要是UTF-8字符集编码的, 以回车换行或换行作为一行的分隔符")]),t._v(" "),s("p",[t._v("斜线(/)被用作为一个路径分隔符，井号(#)或分号(;)被用作于注释. 注释需要与注释符号写在同一行")]),t._v(" "),s("h3",{attrs:{id:"_4-1-通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-通配符"}},[t._v("#")]),t._v(" 4.1 通配符")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("*                匹配除/之外的任意字符串\n**               匹配任意字符串\n?                匹配任意单个字符\n[name]           匹配name中的任意一个单一字符\n[!name]          匹配不存在name中的任意一个单一字符\n{s1,s2,s3}       匹配给定的字符串中的任意一个(用逗号分隔) \n{num1..num2}   　匹配num1到num2之间的任意一个整数, 这里的num1和num2可以为正整数也可以为负整数\n\n")])])]),s("h3",{attrs:{id:"_4-2-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-属性"}},[t._v("#")]),t._v(" 4.2 属性")]),t._v(" "),s("p",[t._v("所有的属性和值都是忽略大小写的. 解析时它们都是小写的")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("indent_style    设置缩进风格(tab是硬缩进，space为软缩进)\nindent_size     用一个整数定义的列数来设置缩进的宽度，如果indent_style为tab，则此属性默认为tab_width\ntab_width       用一个整数来设置tab缩进的列数。默认是indent_size\nend_of_line     设置换行符，值为lf、cr和crlf\ncharset         设置编码，值为latin1、utf-8、utf-8-bom、utf-16be和utf-16le，不建议使用utf-8-bom\ntrim_trailing_whitespace  设为true表示会去除换行行首的任意空白字符。\ninsert_final_newline      设为true表示使文件以一个空白行结尾\nroot        　　　表示是最顶层的配置文件，发现设为true时，才会停止查找.editorconfig文件\n\n")])])]),s("h3",{attrs:{id:"_4-3-控制指定文件类型的缩进大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-控制指定文件类型的缩进大小"}},[t._v("#")]),t._v(" 4.3 控制指定文件类型的缩进大小")]),t._v(" "),s("p",[t._v("这里可以设置，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[{*.json,*.yml}]\nindent_style = space\nindent_size = 2\n")])])]),s("p",[t._v("对于"),s("code",[t._v(".json")]),t._v(" "),s("code",[t._v(".yml")]),t._v(" 文件，使用空格替代tab，并且一个tab会被替换为2个空格。")]),t._v(" "),s("h3",{attrs:{id:"_4-4-文件末尾新行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-文件末尾新行"}},[t._v("#")]),t._v(" 4.4 文件末尾新行")]),t._v(" "),s("p",[t._v("始终在文件末尾插入一个新行")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[*]\nend_of_line = lf\ninsert_final_newline = true\n")])])]),s("p",[t._v("对于所有的文件")]),t._v(" "),s("ul",[s("li",[t._v("每一行的尾部自动调整为 Lf")]),t._v(" "),s("li",[t._v("文件的末尾是一个空行")])]),t._v(" "),s("h2",{attrs:{id:"_5-实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-实例"}},[t._v("#")]),t._v(" 5. 实例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 告诉EditorConfig插件，这是根文件，不用继续往上查找\nroot = true\n\n# 匹配全部文件\n[*]\n# 设置字符集\ncharset = utf-8\n# 缩进风格，可选space、tab\nindent_style = space\n# 缩进的空格数\nindent_size = 4\n# 结尾换行符，可选lf、cr、crlf\nend_of_line = lf\n# 在文件结尾插入新行\ninsert_final_newline = true\n# 删除一行中的前后空格\ntrim_trailing_whitespace = true\n\n# 匹配md结尾的文件\n[*.md]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n\n")])])]),s("h4",{attrs:{id:"_5-1-测试是否可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-测试是否可用"}},[t._v("#")]),t._v(" 5.1 测试是否可用：")]),t._v(" "),s("p",[t._v("在项目的 js 文件中使用 tab 键进行缩进，分别修改 indent_size 属性值为 2 和 4，观察是否有变化。如果没有任何变化，说明还没有安装 Editorconfig 插件。")]),t._v(" "),s("h2",{attrs:{id:"_6-编辑器中安装使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-编辑器中安装使用"}},[t._v("#")]),t._v(" 6. 编辑器中安装使用")]),t._v(" "),s("h3",{attrs:{id:"_6-1-vscode中安装editorconfig"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-vscode中安装editorconfig"}},[t._v("#")]),t._v(" 6.1 VSCode中安装EditorConfig")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210924210740884.png",alt:"image-20210924210740884"}})]),t._v(" "),s("p",[t._v("EditorConfig扩展的作用是读取第一步创建的editorconfig文件中定义的规则，并覆盖user/workspace settings中的对应配置（从这我们也可以看出vscode本身其实是并不直接支持editorconfig的）")]),t._v(" "),s("h4",{attrs:{id:"_6-1-1-全局安装或局部安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-全局安装或局部安装"}},[t._v("#")]),t._v(" 6.1.1 全局安装或局部安装")]),t._v(" "),s("p",[t._v("editorconfig依赖包(npm install -g editorconfig | npm install -D editorconfig)\n安装editorconfig依赖包主要是因为EditorConfig依赖于editorconfig包，不安装的可能会导致EditorConfig无法正常解析我们在第一步定义的editorconfig文件")]),t._v(" "),s("h3",{attrs:{id:"_6-1-2-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-使用"}},[t._v("#")]),t._v(" 6.1.2 使用")]),t._v(" "),s("p",[t._v("打开需要格式化的文件并手动格式化代码（shift+alt+f）")]),t._v(" "),s("h2",{attrs:{id:"_7-导出editorconfig文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-导出editorconfig文件"}},[t._v("#")]),t._v(" 7. 导出editorconfig文件")]),t._v(" "),s("h3",{attrs:{id:"_7-1-webstorm-导出editorconfig文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-webstorm-导出editorconfig文件"}},[t._v("#")]),t._v(" 7.1 webstorm 导出editorconfig文件")]),t._v(" "),s("p",[t._v("操作步骤：webstorm里找到配置，按照以下图示导出.editorconfig，.editorconfig文件会出现在项目的根目录里：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210924210543587.png",alt:"image-20210924210543587"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210924210707992.png",alt:"image-20210924210707992"}})]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/Gabriel_wei/article/details/90286668",target:"_blank",rel:"noopener noreferrer"}},[t._v("vscode使用editorconfig插件以及.editorconfig配置文件说明(统一代码风格工具——editorConfig)"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);