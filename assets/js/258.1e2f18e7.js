(window.webpackJsonp=window.webpackJsonp||[]).push([[258],{638:function(s,t,a){"use strict";a.r(t);var n=a(26),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-事务-transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-事务-transaction"}},[s._v("#")]),s._v(" MySQL-事务(transaction)")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("事务是指逻辑上的一组操作，组成这组操作的各个单元，要不全成功要不全失败。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 支持连续"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SQL")]),s._v("的集体成功或集体撤销。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 事务是数据库在数据完整性方面的一个功能。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 需要利用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" 或 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BDB")]),s._v(" 存储引擎，对自动提交的特性支持完成。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v("被称为事务安全型引擎。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务开启")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 或者 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    开启事务后，所有被执行的"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SQL")]),s._v("语句均被认作当前事务内的"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SQL")]),s._v("语句。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务提交")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务回滚")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    如果部分操作发生问题，映射到事务开启前。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务的特性")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 原子性（Atomicity）\n        事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 一致性（Consistency）\n        事务前后数据的完整性必须保持一致。\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 事务开始和结束时，外部数据一致\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 在整个事务过程中，操作是连续的\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 隔离性（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Isolation")]),s._v("）\n        多个用户并发访问数据库时，一个用户的事务不能被其它用户的事务所干扰，多个并发事务之间的数据要相互隔离。\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 持久性（Durability）\n        一个事务一旦被提交，它对数据库中的数据改变就是永久性的。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务的实现")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 要求是事务支持的表类型\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 执行一组相关的操作前开启事务\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 整组操作完成后，都成功，则提交；如果存在失败，选择回滚，则会回到事务开始的备份点。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务的原理")]),s._v("\n    利用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v("的自动提交"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("autocommit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("特性完成。\n    普通的MySQL执行语句后，当前的数据提交操作均可被其他客户端可见。\n    而事务是暂时关闭“自动提交”机制，需要"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),s._v("提交持久化数据操作。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 注意")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 数据定义语言（DDL）语句不能被回滚，比如创建或取消数据库的语句，和创建、取消或更改表或存储的子程序的语句。\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 事务不能被嵌套\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 保存点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SAVEPOINT")]),s._v(" 保存点名称 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置一个事务保存点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SAVEPOINT")]),s._v(" 保存点名称 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 回滚到保存点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RELEASE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SAVEPOINT")]),s._v(" 保存点名称 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除保存点")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- InnoDB自动提交特性设置")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" autocommit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("表示关闭自动提交，"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("表示开启自动提交。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 如果关闭了，那普通操作的结果对其他客户端也不可见，需要"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),s._v("提交后才能持久化数据操作。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 也可以关闭自动提交来开启事务。但与"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v("不同的是，\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" autocommit是永久改变服务器的设置，直到下次再次修改该设置。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("针对当前连接"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        而"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v("记录开启前的状态，而一旦事务提交或回滚后就需要再次开启事务。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("针对当前事务"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://javaguide.cn/database/mysql/a-thousand-lines-of-mysql-study-notes/#",target:"_blank",rel:"noopener noreferrer"}},[s._v("一千行 MySQL 学习笔记"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);