(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{532:function(s,t,a){"use strict";a.r(t);var _=a(26),v=Object(_.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"uml类图-class-diagrams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml类图-class-diagrams"}},[s._v("#")]),s._v(" UML类图(Class Diagrams)")]),s._v(" "),a("h2",{attrs:{id:"_1-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[s._v("#")]),s._v(" 1.基本概念")]),s._v(" "),a("p",[s._v("类图是根据用例图抽象成类，描述类的内部结构和类和类之间的关系，是一种静态结构图")]),s._v(" "),a("h2",{attrs:{id:"_2-常见的几种关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见的几种关系"}},[s._v("#")]),s._v(" 2.常见的几种关系：")]),s._v(" "),a("ul",[a("li",[s._v("泛化（Generalization）")]),s._v(" "),a("li",[s._v("实现（Realization）")]),s._v(" "),a("li",[s._v("关联（Association)")]),s._v(" "),a("li",[s._v("聚合（Aggregation）")]),s._v(" "),a("li",[s._v("组合(Composition)")]),s._v(" "),a("li",[s._v("依赖(Dependency)")])]),s._v(" "),a("p",[a("strong",[s._v("各种关系的强弱顺序： 泛化 = 实现 > 组合 > 聚合 > 关联 > 依赖")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-泛化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-泛化"}},[s._v("#")]),s._v(" 2.1 泛化")]),s._v(" "),a("p",[a("strong",[s._v("【泛化关系】：是一种继承关系，表示一般与特殊的关系，它指定了子类如何继承父类的所有特征和行为。例如：老虎是动物的一种，即有老虎的特性也有动物的共性****即有老虎的特性也有动物的共性。")])]),s._v(" "),a("p",[s._v("描述方式：用三角形箭头加实线表示，箭头指向父类")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml01.jpg",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_2-2-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实现"}},[s._v("#")]),s._v(" 2.2 实现")]),s._v(" "),a("p",[a("strong",[s._v("【实现关系】：是一种类与接口的关系，表示类是接口所有特征和行为的实现。")])]),s._v(" "),a("p",[s._v("描述方式：用三角形箭头加虚线表示，箭头指向实现的接口")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml02.jpg",alt:""}})]),s._v(" "),a("p",[s._v("###2.3.关联")]),s._v(" "),a("p",[a("strong",[s._v("【关联关系】：是一种拥有的关系，它使一个类知道另一个类的属性和方法；如：老师与学生，丈夫与妻子关联可以是双向的，也可以是单向的。双向的关联可以有两个箭头或者没有箭头，单向的关联有一个箭头。")])]),s._v(" "),a("p",[a("strong",[s._v("【代码体现】：成员变量")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml03.jpg",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_2-4-共享聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-共享聚合"}},[s._v("#")]),s._v(" 2.4 共享聚合")]),s._v(" "),a("p",[a("strong",[s._v("【聚合关系】：是整体与部分的关系，且部分可以离开整体而单独存在。如车和轮胎是整体和部分的关系，轮胎离开车仍然可以存在。")])]),s._v(" "),a("p",[s._v("​      　"),a("strong",[s._v("聚合关系是关联关系的一种，是强的关联关系；关联和聚合在语法上无法区分，必须考察具体的逻辑关系。")])]),s._v(" "),a("p",[s._v("​         "),a("strong",[s._v("【代码体现】：成员变量")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml04.jpg",alt:""}})]),s._v(" "),a("p",[s._v("###2.5.组合集合")]),s._v(" "),a("p",[a("strong",[s._v("【组合关系】：是整体与部分的关系，但部分不能离开整体而单独存在。如公司和部门是整体和部分的关系，没有公司就不存在部门。")])]),s._v(" "),a("p",[s._v("​        "),a("strong",[s._v("组合关系是关联关系的一种，是比聚合关系还要强的关系，它要求普通的聚合关系中代表整体的对象负责代表部分的对象的生命周期。")])]),s._v(" "),a("p",[a("strong",[s._v("【代码体现】：成员变量")])]),s._v(" "),a("p",[a("strong",[s._v("【箭头及指向】：带实心菱形的实线，菱形指向整体")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml05.jpg",alt:""}})]),s._v(" "),a("p",[s._v("###2.6.依赖")]),s._v(" "),a("p",[a("strong",[s._v("【依赖关系】：是一种使用的关系，即一个类的实现需要另一个类的协助，所以要尽量不使用双向的互相依赖.")])]),s._v(" "),a("p",[a("strong",[s._v("【代码表现】：局部变量、方法的参数或者对静态方法的调用")])]),s._v(" "),a("p",[a("strong",[s._v("【箭头及指向】：带箭头的虚线，指向被使用者")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml07.jpg",alt:""}})]),s._v(" "),a("p",[s._v("###2.7 各种类图关系")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/uml08.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=v.exports}}]);