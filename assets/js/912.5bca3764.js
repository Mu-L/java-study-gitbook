(window.webpackJsonp=window.webpackJsonp||[]).push([[912],{1289:function(s,a,t){"use strict";t.r(a);var e=t(26),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jenkins共享库编写与使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins共享库编写与使用"}},[s._v("#")]),s._v(" Jenkins共享库编写与使用")]),s._v(" "),t("h2",{attrs:{id:"_1-背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[s._v("#")]),s._v(" 1. 背景")]),s._v(" "),t("p",[s._v("如果你经常使用 Jenkins Pipeline 一定会遇到多个不同流水线中有大量重复代码的情况，很多时候为了方便我们都是直接复制粘贴到不同的管道中去的，但是长期下去这些代码的维护就会越来越麻烦。为了解决这个问题，Jenkins 中提供了共享库的概念来解决重复代码的问题，我们只需要将公共部分提取出来，然后就可以在所有的 Pipeline 中引用这些共享库下面的代码了。")]),s._v(" "),t("h2",{attrs:{id:"_2-共享库是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-共享库是什么"}},[s._v("#")]),s._v(" 2. 共享库是什么？")]),s._v(" "),t("p",[s._v("共享库（shared library）是一些"),t("strong",[s._v("独立的 Groovy 脚本的集合")]),s._v("，我们可以在运行 Pipeline 的时候去获取这些共享库代码。使用共享库最好的方式同样是把代码使用 Git 仓库进行托管，这样我们就可以进行版本化管理了。")]),s._v(" "),t("p",[s._v("使用共享库一般只需要3个步骤即可：")]),s._v(" "),t("ul",[t("li",[s._v("首先创建 Groovy 脚本，添加到 Git 仓库中")]),s._v(" "),t("li",[s._v("然后在 Jenkins 中配置将共享库添加到 Jenkins 中来")]),s._v(" "),t("li",[s._v("最后，在我们的流水线中导入需要使用的共享库："),t("code",[s._v("@Library('your-shared-library')")]),s._v("，这样就可以使用共享库中的代码了。")])]),s._v(" "),t("h2",{attrs:{id:"_3-共享库内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-共享库内容"}},[s._v("#")]),s._v(" 3. 共享库内容")]),s._v(" "),t("p",[s._v("在共享库中一般会有两种通用的代码：")]),s._v(" "),t("h3",{attrs:{id:"_3-1-vars-下的steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-vars-下的steps"}},[s._v("#")]),s._v(" 3.1 vars 下的steps")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("Steps")]),s._v("：这些 Steps 在 Jenkins 中被称为"),t("strong",[s._v("全局变量")]),s._v("，我们可以在所有的 Jenkins Pipeline 中使用这些自定义的 Steps。")])]),s._v(" "),t("p",[s._v("比如，我们可以编写一个标准的 Step 来部署应用或者发送消息通知等，我们就可以将代码添加到 "),t("code",[s._v("vars/YourStepName.groovy")]),s._v(" 文件中，然后实现一个 "),t("code",[s._v("call")]),s._v(" 函数即可：")]),s._v(" "),t("div",{staticClass:"language-groovy extra-class"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang comment"}},[s._v("#!/usr/bin/env groovy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vars/YourStepName.groovy")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do something here...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_3-2-src下的通用代码-通常放帮助类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-src下的通用代码-通常放帮助类"}},[s._v("#")]),s._v(" 3.2 src下的通用代码（通常放帮助类）")]),s._v(" "),t("p",[s._v("这些代码需要放在 "),t("code",[s._v("src/your/package/name")]),s._v(" 目录下面，然后就可以使用常规的 Groovy 语法了，例如：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('#!/usr/bin/env groovy\n// com/qikqiak/GlobalVars.groovy\npackage com.qikqiak\n\nclass GlobalVars {\n   static String foo = "bar"\n}\n')])])]),t("p",[s._v("我们可以在 Jenkins Pipeline 中使用 "),t("code",[s._v("import")]),s._v(" 导入上面的类，并引用其中的静态变量，比如 "),t("code",[s._v("GlobalVars.foo")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"_4-示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-示例"}},[s._v("#")]),s._v(" 4. 示例")]),s._v(" "),t("h3",{attrs:{id:"_4-1-步骤1-vars的steps示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-步骤1-vars的steps示例"}},[s._v("#")]),s._v(" 4.1 步骤1：vars的steps示例")]),s._v(" "),t("p",[s._v("新建一个名为 "),t("code",[s._v("pipeline-library-demo")]),s._v(" 的文件夹，将该项目加入到 Git 仓库中。首先创建一个名为 "),t("code",[s._v("vars")]),s._v(" 的目录，自定义一个 step 就是在 "),t("code",[s._v("vars")]),s._v(" 目录下面的一个 "),t("code",[s._v(".groovy")]),s._v(" 文件，这些被称为全局变量，比如我们添加一个 "),t("code",[s._v("sayHi.groovy")]),s._v(" 的文件，代码如下所示：")]),s._v(" "),t("div",{staticClass:"language-groovy extra-class"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang comment"}},[s._v("#!/usr/bin/env groovy")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zsz'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  echo "),t("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"Hello, '),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v('."')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("需要注意的是需要实现 call 方法，添加了一个名为 name 的参数，具有默认值 "),t("code",[s._v("zsz")]),s._v("，可以用 "),t("code",[s._v("${name}")]),s._v(" 来进行访问。")]),s._v(" "),t("h3",{attrs:{id:"_4-2-步骤2-src-的通用代码示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-步骤2-src-的通用代码示例"}},[s._v("#")]),s._v(" 4.2 步骤2：src 的通用代码示例")]),s._v(" "),t("p",[s._v("然后创建一个名为 "),t("code",[s._v("src/com/zsz/GlobalVars.groovy")]),s._v(" 的文件，文件内容如下所示：")]),s._v(" "),t("div",{staticClass:"language-groovy extra-class"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang comment"}},[s._v("#!/usr/bin/env groovy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qikqiak\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GlobalVars")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" String foo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"bar"')]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 Pipeline 中可以引用这里的静态变量：")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// import com.zsz.GlobalVars")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// println GlobalVars.foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_4-3-完整的代码目录如下所示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-完整的代码目录如下所示"}},[s._v("#")]),s._v(" 4.3 完整的代码目录如下所示：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ tree .\n.\n├── README.md\n├── src\n│   └── com\n│       └── zsz\n│           └── GlobalVars.groovy\n└── vars\n    └── sayHi.groovy\n\n4 directories, 3 files\n")])])]),t("h3",{attrs:{id:"_4-4-上传代码到git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-上传代码到git"}},[s._v("#")]),s._v(" 4.4 上传代码到git")]),s._v(" "),t("p",[s._v("https://gitee.com/zszdevelop/pipeline-library-demo")]),s._v(" "),t("h3",{attrs:{id:"_4-5-jenkins-添加共享库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-jenkins-添加共享库"}},[s._v("#")]),s._v(" 4.5 Jenkins 添加共享库")]),s._v(" "),t("p",[s._v("共享库创建完成后，我们需要让 Jenkins 知道这个共享库，我们可以从 Jenkins 的 Web 页面进行添加。在 Jenkins 首页 -> 系统管理 -> 系统配置，在 "),t("code",[s._v("Global Pipeline Libraries")]),s._v(" 区域配置共享库：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211001182353785.png",alt:"image-20211001182353785"}})]),s._v(" "),t("h3",{attrs:{id:"_4-6-新建流水线项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-新建流水线项目"}},[s._v("#")]),s._v(" 4.6 新建流水线项目")]),s._v(" "),t("p",[s._v("保存后即可使用配置共享库。接下来新建一个名为 "),t("code",[s._v("share-lib-demo")]),s._v(" 的流水线项目，在 "),t("code",[s._v("Pipeline script")]),s._v(" 区域添加如下代码：")]),s._v(" "),t("div",{staticClass:"language-groovy extra-class"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Library")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pipeline-library-demo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("_")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qikqiak"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("GlobalVars\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Demo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello world'")]),s._v("\n    sayHi "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),s._v("\n    println GlobalVars"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211001182543979.png",alt:"image-20211001182543979"}})]),s._v(" "),t("p",[s._v("需要注意的是 "),t("code",[s._v("@Library('pipeline-library-demo')_")]),s._v(" 最后有一个下划线 "),t("code",[s._v("_")]),s._v("，这个下划线并不是写错了，如果 "),t("code",[s._v("@Libray")]),s._v(" 后面紧接的一行不是 "),t("code",[s._v("import")]),s._v(" 语句的话，就需要这个下划线，我们这里后面就是一条 "),t("code",[s._v("import")]),s._v(" 语句，所以这里可以省略这个下划线。")]),s._v(" "),t("h3",{attrs:{id:"_4-7-构建输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-构建输出"}},[s._v("#")]),s._v(" 4.7 构建输出")]),s._v(" "),t("p",[s._v("配置完成后，构建这个 Pipeline，正常就可以看到如下所示的构建结果")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211001182654054.png",alt:"image-20211001182654054"}})]),s._v(" "),t("h2",{attrs:{id:"_5-参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-参考文章"}},[s._v("#")]),s._v(" 5. 参考文章")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.jenkins.io/zh/doc/book/pipeline/shared-libraries/",target:"_blank",rel:"noopener noreferrer"}},[s._v("jenkins官网"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.qikqiak.com/post/jenkins-shared-library-demo/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jenkins 共享库示例"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/zszdevelop/jenkinslibrary",target:"_blank",rel:"noopener noreferrer"}},[s._v("DevOps流水线最佳实践"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);