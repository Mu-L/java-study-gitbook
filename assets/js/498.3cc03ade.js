(window.webpackJsonp=window.webpackJsonp||[]).push([[498],{874:function(a,t,s){"use strict";s.r(t);var e=s(26),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"docker基础-docker数据卷和数据管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker基础-docker数据卷和数据管理"}},[a._v("#")]),a._v(" Docker基础-Docker数据卷和数据管理")]),a._v(" "),s("blockquote",[s("p",[a._v("Docker 容器的数据放哪里呢？ 本文带你理解如何在 Docker 内部以及容器之间管理数据")])]),a._v(" "),s("h2",{attrs:{id:"_1-docker-数据管理简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-数据管理简介"}},[a._v("#")]),a._v(" 1. Docker 数据管理简介")]),a._v(" "),s("blockquote",[s("p",[a._v("实际上我们的容器就好像是一个简易版的操作系统，只不过系统中只安装了我们的程序运行所需要的环境，前边说到我们的容器是可以删除的，那如果删除了，容器中的程序产生的需要持久化的数据怎么办呢？容器运行的时候我们可以进容器去查看，容器一旦删除就什么都没有了。")])]),a._v(" "),s("p",[a._v("所以数据卷就是来解决这个问题的，是"),s("strong",[a._v("用来将数据持久化到我们宿主机上，与容器间实现数据共享，简单的说就是将宿主机的目录映射到容器中的目录")]),a._v("，应用程序在容器中的目录读写数据会同步到宿主机上，这样容器产生的数据就可以持久化了，比如我们的数据库容器，就可以把数据存储到我们宿主机上的真实磁盘中。")]),a._v(" "),s("h3",{attrs:{id:"_1-1-数据卷-data-volume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据卷-data-volume"}},[a._v("#")]),a._v(" 1.1 数据卷(Data Volume)")]),a._v(" "),s("p",[a._v("数据卷(Data Volume)是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：")]),a._v(" "),s("ul",[s("li",[a._v("数据卷可以在容器之间共享和重用")]),a._v(" "),s("li",[a._v("对数据卷的修改会立马生效")]),a._v(" "),s("li",[a._v("对数据卷的更新，不会影响镜像")]),a._v(" "),s("li",[a._v("卷会一直存在，直到没有容器使用")])]),a._v(" "),s("h4",{attrs:{id:"_1-1-1-建一个数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-建一个数据卷"}},[a._v("#")]),a._v(" 1.1.1 建一个数据卷")]),a._v(" "),s("blockquote",[s("p",[a._v("在用 docker run 命令的时候，使用 -v 标记来创建一个数据卷并挂载到容器里。在一次 run 中多次使用可以挂载多个数据卷。")])]),a._v(" "),s("p",[a._v("下面创建一个 web 容器，并加载一个数据卷到容器的 /webapp-data 目录。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d -P --name web -v /webapp-data training/webapp python app.py")]),a._v("\ne331e83e59486a131919cba8698b24eaee051a947838bb1c15c03df8b3464b97\n    \n")])])]),s("p",[a._v("我们看下容器内部是否生成/webapp-data目录")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker exec -it web /bin/bash")]),a._v("\nroot@e331e83e5948:/opt/webapp"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd /webapp-data")]),a._v("\nroot@e331e83e5948:/webapp-data"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll")]),a._v("\ntotal "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\ndrwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" root root "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" 01:24 ./\ndrwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" 01:24 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/\nroot@e331e83e5948:/webapp-data"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n    \n")])])]),s("p",[a._v("注意：也可以在 Dockerfile 中使用 VOLUME 来添加一个或者多个新的卷到由该镜像创建的任意容器。")]),a._v(" "),s("h4",{attrs:{id:"_1-1-2-挂载一个主机目录作为数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-挂载一个主机目录作为数据卷"}},[a._v("#")]),a._v(" 1.1.2 挂载一个主机目录作为数据卷")]),a._v(" "),s("blockquote",[s("p",[a._v("使用 -v 标记也可以指定挂载一个本地主机的目录到容器中去。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker rm -f web")]),a._v("\nweb\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d --name web -v /opt/webapp-data5:/opt/webapp2 training/webapp")]),a._v("\nfce27f6ea9ce9699864644a48aed6db8b772c96be36f46bee6154d2e2c9915b9\n")])])]),s("p",[a._v("我们验证下：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker exec -it web /bin/bash")]),a._v("\nroot@fce27f6ea9ce:/opt/webapp"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd ..")]),a._v("\nroot@fce27f6ea9ce:/opt"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\nwebapp  webapp2\nroot@fce27f6ea9ce:/opt"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd webapp2")]),a._v("\nroot@fce27f6ea9ce:/opt/webapp2"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mkdir test")]),a._v("\nroot@fce27f6ea9ce:/opt/webapp2"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# exit")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd webapp-data5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai webapp-data5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll")]),a._v("\ntotal "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\ndrwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" root root "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":12 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n\n")])])]),s("p",[a._v("上面的命令加载主机的 /opt/webapp-data5 目录到容器的 /opt/webapp2 目录。这个功能在进行测试的时候十分方便，比如用户可以放置一些程序到本地目录中，来查看容器是否正常工作。"),s("strong",[a._v("本地目录的路径必须是绝对路径，如果目录不存在 Docker 会自动为你创建它")]),a._v("。")]),a._v(" "),s("p",[a._v("*注意：Dockerfile 显然是不支持这种用法，这是因为 Dockerfile 是为了移植和分享用的, 因为不同操作系统的路径格式不一样，所以目前还不能支持。")]),a._v(" "),s("p",[a._v("我们删除容器，看主机上数据是否会被删除")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker rm -f web")]),a._v("\nweb\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd /opt/webapp-data5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai webapp-data5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll")]),a._v("\ntotal "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\ndrwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" root root "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":12 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n\n")])])]),s("p",[a._v("很明显，没有被删除")]),a._v(" "),s("h4",{attrs:{id:"_1-1-3-挂载一个本地主机文件作为数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-挂载一个本地主机文件作为数据卷"}},[a._v("#")]),a._v(" 1.1.3 挂载一个本地主机文件作为数据卷")]),a._v(" "),s("blockquote",[s("p",[a._v("-v 标记也可以从主机挂载单个文件到容器中")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run --rm -it -v ~/.bash_history:/.bash_history ubuntu /bin/bash")]),a._v("\nroot@79eca07938db:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll | grep .bash_history")]),a._v("\n-rw-------   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19549")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":28 .bash_history\nroot@79eca07938db:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# exit")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n\n")])])]),s("p",[a._v("这样就可以记录在容器输入过的命令了。")]),a._v(" "),s("p",[a._v("*注意：如果直接挂载一个文件，很多文件编辑工具，包括 "),s("code",[a._v("vi")]),a._v(" 或者 "),s("code",[a._v("sed --in-place")]),a._v("，可能会造成文件 inode 的改变，从 Docker 1.1 .0起，这会导致报错误信息。所以最简单的办法就直接挂载文件的父目录。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-数据卷容器-data-volume-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数据卷容器-data-volume-container"}},[a._v("#")]),a._v(" 1.2 数据卷容器(Data Volume Container)")]),a._v(" "),s("blockquote",[s("p",[a._v("上面讲述的是主机和容器之间共享数据，那么如何你有一些持续更新的数据需要在容器之间共享，最好的方法就是创建数据卷容器。")])]),a._v(" "),s("p",[a._v("数据卷容器，其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d -v /dbdata --name dbdata training/postgres")]),a._v("\n70966085a85b05dd741a44a96725e2e44f146cc404b1b4e3aa3e519cd546c6b4\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d --volumes-from dbdata --name db1 training/postgres")]),a._v("\n4c92240096d919724b233e1a5cfca94b5ceb0505e43262a7121cb83cfd8542f6\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d --volumes-from dbdata --name db2 training/postgres")]),a._v("\n25246ebfae2f8437316b10d7eac3b34c1bd1522f50ba81651aec198bc79415a2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker ps -a")]),a._v("\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES\n70966085a85b        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("46")]),a._v(" seconds ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("45")]),a._v(" seconds       "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            dbdata\n25246ebfae2f        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   About a minute ago   Up About a minute   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            db2\n4c92240096d9        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" minutes ago        Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" minutes        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            db1\n\n")])])]),s("p",[a._v("-volumes-from 可以多次使用来 mount 多个conatainer里的多个volumes。")]),a._v(" "),s("p",[a._v("这个操作是链式的， 我们在db1 中通过 --volumes-from mount进来的 volume可以继续被其他container使用")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d --name db3 --volumes-from db1 training/postgres")]),a._v("\n44d0719377e86e3080b26d22adcb6055de93033dc9509ca2ecd8be2c93dc33b5\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker ps")]),a._v("\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n44d0719377e8        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" seconds ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" seconds        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            db3\n70966085a85b        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" minutes ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" minutes        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            dbdata\n25246ebfae2f        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" minutes ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" minutes        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            db2\n4c92240096d9        training/postgres   "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"su postgres -c \'/us…"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" minutes ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" minutes        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("/tcp            db1\n\n")])])]),s("p",[s("strong",[a._v("使用 --volumes-from 参数所挂载数据卷的容器自己并不需要保持在运行状态")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("如果删除了挂载的容器（包括 dbdata、db1 和 db2），数据卷并不会被自动删除。如果要删除一个数据卷，必须在删除最后一个还挂载着它的容器时使用 "),s("code",[a._v("docker rm -v")]),a._v(" 命令来指定同时删除关联的容器。 这可以让用户在容器之间升级和移动数据卷")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"_1-3-数据备份、恢复、迁移数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-数据备份、恢复、迁移数据卷"}},[a._v("#")]),a._v(" 1.3 数据备份、恢复、迁移数据卷")]),a._v(" "),s("p",[a._v("可以利用数据卷对其中的数据进行进行备份、恢复和迁移。")]),a._v(" "),s("h4",{attrs:{id:"_1-3-1-备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-备份"}},[a._v("#")]),a._v(" 1.3.1 备份")]),a._v(" "),s("p",[a._v("首先使用 --volumes-from 标记来创建一个加载 dbdata 容器卷的容器，并从本地主机挂载当前到容器的 /backup 目录。命令如下：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run --volumes-from dbdata -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata")]),a._v("\ntar: Removing leading `/' from member names\n/dbdata/\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll | grep backup.tar")]),a._v("\n-rw-r--r-- "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10240")]),a._v(" Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(":39 backup.tar\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n\n")])])]),s("p",[a._v("容器启动后，使用了 tar 命令来将 dbdata 卷备份为本地的 /backup/backup.tar。")]),a._v(" "),s("h4",{attrs:{id:"_1-3-2-恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-恢复"}},[a._v("#")]),a._v(" 1.3.2 恢复")]),a._v(" "),s("p",[a._v("如果要恢复数据到一个容器")]),a._v(" "),s("p",[a._v("首先创建一个带有数据卷的容器 dbdata2")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -v /dbdata --name dbdata2 ubuntu /bin/bash")]),a._v("\n\n")])])]),s("p",[a._v("然后创建另一个容器，挂载 dbdata2 的容器，并使用 untar 解压备份文件到挂载的容器卷中。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@pdai ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run --volumes-from dbdata2 -v $(pwd):/backup ubuntu tar xvf /backup/backup.tar")]),a._v("\ndbdata/\n")])])]),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://pdai.tech/md/devops/docker/docker-06-data.html#%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8D%B7",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[a._v("Docker基础 - Docker数据卷和数据管理")]),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);