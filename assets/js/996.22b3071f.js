(window.webpackJsonp=window.webpackJsonp||[]).push([[996],{1375:function(t,s,a){"use strict";a.r(s);var _=a(26),e=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"类似部门表查询子部门树结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类似部门表查询子部门树结构"}},[t._v("#")]),t._v(" 类似部门表查询子部门树结构")]),t._v(" "),a("h2",{attrs:{id:"_1-问题背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-问题背景"}},[t._v("#")]),t._v(" 1. 问题背景")]),t._v(" "),a("p",[t._v("假设类似部门表这种结构的数据有 100w条。层级大概有10层")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("id")]),t._v(" "),a("th",[t._v("name")]),t._v(" "),a("th",[t._v("pid")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("总公司")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("分公司1")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("分公司2")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("部门1")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("....")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("我们需要将部门表的转化为树结构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210522110741641.png",alt:"image-20210522110741641"}})]),t._v(" "),a("h2",{attrs:{id:"_2-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-问题"}},[t._v("#")]),t._v(" 2. 问题")]),t._v(" "),a("p",[t._v("正常全表转树结构是没有任何问题的，但我实际想要的只有紫色框框的数据")]),t._v(" "),a("ol",[a("li",[t._v("并不是每个用户都能看到所有的组织机构数据（例如分公司1只能看到分公司1下的所有数据）")]),t._v(" "),a("li",[a("strong",[t._v("查询搜索")]),t._v("的时候也需要只查拥有的权限数据")])]),t._v(" "),a("h2",{attrs:{id:"_3-解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决方案"}},[t._v("#")]),t._v(" 3. 解决方案")]),t._v(" "),a("h3",{attrs:{id:"_3-1-同样全表查出后-找到自己的部-id-然后遍历出所有子树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-同样全表查出后-找到自己的部-id-然后遍历出所有子树"}},[t._v("#")]),t._v(" 3.1 同样全表查出后,找到自己的部 id,然后遍历出所有子树")]),t._v(" "),a("p",[t._v("面临的问题：数据量实在太大,我下级部门可能只有100个,但我却查了100w数据出来,去找所有子树")]),t._v(" "),a("h3",{attrs:{id:"_3-2-用户只查自己的单位-点击下级的时候-再查pid为自己的下级部门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-用户只查自己的单位-点击下级的时候-再查pid为自己的下级部门"}},[t._v("#")]),t._v(" 3.2 用户只查自己的单位,点击下级的时候,再查pid为自己的下级部门")]),t._v(" "),a("p",[t._v("问题:我搜案的时候,无法正常搜案。因为我还要知道下级的下级是否包含要搜案的数据。又得 遍历多次查询")]),t._v(" "),a("h3",{attrs:{id:"_3-3-新增父级路径-推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-新增父级路径-推荐"}},[t._v("#")]),t._v(" 3.3 新增父级路径（推荐）")]),t._v(" "),a("p",[t._v("只要部门父级id路径前缀（包含自己节点）相同，则为该节点的所有子节点。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210522112314946.png",alt:"image-20210522112314946"}})]),t._v(" "),a("h2",{attrs:{id:"_4-代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-代码实现"}},[t._v("#")]),t._v(" 4. 代码实现")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Sql 语句")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("方式1：like")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sys_dept\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" ancestors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" concat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{ancestors},'%')")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("FIND_IN_SET")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sys_dept "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" FIND_IN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{deptId}, ancestors) <![CDATA[ <> ]]> 0")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("MySQL提供了一个名为"),a("code",[t._v("FIND_IN_SET()")]),t._v("的内置字符串函数，允许您在逗号分隔的字符串列表中查找指定字符串的位置。")])]),t._v(" "),a("blockquote",[a("p",[t._v("oracle 没有该函数，需要自定义函数")])])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);