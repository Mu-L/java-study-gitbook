(window.webpackJsonp=window.webpackJsonp||[]).push([[481],{857:function(t,a,s){"use strict";s.r(a);var n=s(26),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"transactional注解的失效场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional注解的失效场景"}},[t._v("#")]),t._v(" @Transactional注解的失效场景")]),t._v(" "),s("h2",{attrs:{id:"_1-背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[t._v("#")]),t._v(" 1. 背景")]),t._v(" "),s("p",[s("code",[t._v("@Transactional")]),t._v(" 注解相信大家并不陌生，平时开发中很常用的一个注解，它能保证方法内多个数据库操作要么同时成功、要么同时失败。使用"),s("code",[t._v("@Transactional")]),t._v("注解时需要注意许多的细节，不然你会发现"),s("code",[t._v("@Transactional")]),t._v("总是莫名其妙的就失效了。")]),t._v(" "),s("h2",{attrs:{id:"_2-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务"}},[t._v("#")]),t._v(" 2. 事务")]),t._v(" "),s("p",[t._v("事务管理在系统开发中是不可缺少的一部分，"),s("code",[t._v("Spring")]),t._v("提供了很好事务管理机制，主要分为"),s("code",[t._v("编程式事务")]),t._v("和"),s("code",[t._v("声明式事务")]),t._v("两种。")]),t._v(" "),s("p",[s("strong",[t._v("编程式事务")]),t._v("：是指在代码中手动的管理事务的提交、回滚等操作，代码侵入性比较强，如下示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//TODO something")]),t._v("\n     transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    transactionManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvoiceApplyException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"异常失败"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("声明式事务")]),t._v("：基于"),s("code",[t._v("AOP")]),t._v("面向切面的，它将具体业务与事务处理部分解耦，代码侵入性很低，所以在实际开发中声明式事务用的比较多。声明式事务也有两种实现方式，一是基于"),s("code",[t._v("TX")]),t._v("和"),s("code",[t._v("AOP")]),t._v("的xml配置文件方式，二种就是基于@Transactional注解了。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-transactional介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-transactional介绍"}},[t._v("#")]),t._v(" 3. @Transactional介绍")]),t._v(" "),s("h3",{attrs:{id:"_3-1-transactional注解可以作用于哪些地方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-transactional注解可以作用于哪些地方"}},[t._v("#")]),t._v(" 3.1 @Transactional注解可以作用于哪些地方？")]),t._v(" "),s("p",[t._v("@Transactional 可以作用在"),s("code",[t._v("接口")]),t._v("、"),s("code",[t._v("类")]),t._v("、"),s("code",[t._v("类方法")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("作用于类")]),t._v("：当把@Transactional 注解放在类上时，表示所有该类的"),s("code",[t._v("public")]),t._v("方法都配置相同的事务属性信息。")]),t._v(" "),s("li",[s("strong",[t._v("作用于方法")]),t._v("：当类配置了@Transactional，方法也配置了@Transactional，方法的事务会覆盖类的事务配置信息。")]),t._v(" "),s("li",[s("strong",[t._v("作用于接口")]),t._v("：不推荐这种使用方法，因为一旦标注在Interface上并且配置了Spring AOP 使用CGLib动态代理，将会导致@Transactional注解失效")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MybatisPlusController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDictMapper")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rollbackFor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),t._v(" cityInfoDict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setParentCityId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-2-transactional注有哪些属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-transactional注有哪些属性"}},[t._v("#")]),t._v(" 3.2 @Transactional注有哪些属性？")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-propagation属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-propagation属性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3.2.1 propagation属性")])]),t._v(" "),s("p",[s("code",[t._v("propagation")]),t._v(" 代表事务的传播行为，默认值为 "),s("code",[t._v("Propagation.REQUIRED")]),t._v("，其他的属性信息如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Propagation.REQUIRED")]),t._v("：如果当前存在事务，则加入该事务，如果当前不存在事务，则创建一个新的事务。"),s("strong",[t._v("(")]),t._v(" 也就是说如果A方法和B方法都添加了注解，在默认传播模式下，A方法内部调用B方法，会把两个方法的事务合并为一个事务 "),s("strong",[t._v("）")])]),t._v(" "),s("li",[s("code",[t._v("Propagation.SUPPORTS")]),t._v("：如果当前存在事务，则加入该事务；如果当前不存在事务，则以非事务的方式继续运行。")]),t._v(" "),s("li",[s("code",[t._v("Propagation.MANDATORY")]),t._v("：如果当前存在事务，则加入该事务；如果当前不存在事务，则抛出异常。")]),t._v(" "),s("li",[s("code",[t._v("Propagation.REQUIRES_NEW")]),t._v("：重新创建一个新的事务，如果当前存在事务，暂停当前的事务。"),s("strong",[t._v("(")]),t._v(" 当类A中的 a 方法用默认"),s("code",[t._v("Propagation.REQUIRED")]),t._v("模式，类B中的 b方法加上采用 "),s("code",[t._v("Propagation.REQUIRES_NEW")]),t._v("模式，然后在 a 方法中调用 b方法操作数据库，然而 a方法抛出异常后，b方法并没有进行回滚，因为"),s("code",[t._v("Propagation.REQUIRES_NEW")]),t._v("会暂停 a方法的事务 "),s("strong",[t._v(")")])]),t._v(" "),s("li",[s("code",[t._v("Propagation.NOT_SUPPORTED")]),t._v("：以非事务的方式运行，如果当前存在事务，暂停当前的事务。")]),t._v(" "),s("li",[s("code",[t._v("Propagation.NEVER")]),t._v("：以非事务的方式运行，如果当前存在事务，则抛出异常。")]),t._v(" "),s("li",[s("code",[t._v("Propagation.NESTED")]),t._v(" ：和 Propagation.REQUIRED 效果一样。")])]),t._v(" "),s("h4",{attrs:{id:"_3-2-2isolation-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2isolation-属性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3.2.2isolation 属性")])]),t._v(" "),s("p",[s("code",[t._v("isolation")]),t._v(" ：事务的隔离级别，默认值为 "),s("code",[t._v("Isolation.DEFAULT")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("Isolation.DEFAULT：使用底层数据库默认的隔离级别。")]),t._v(" "),s("li",[t._v("Isolation.READ_UNCOMMITTED")]),t._v(" "),s("li",[t._v("Isolation.READ_COMMITTED")]),t._v(" "),s("li",[t._v("Isolation.REPEATABLE_READ")]),t._v(" "),s("li",[t._v("Isolation.SERIALIZABLE")])]),t._v(" "),s("h4",{attrs:{id:"_3-2-3-timeout-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-timeout-属性"}},[t._v("#")]),t._v(" 3.2.3 "),s("strong",[t._v("timeout 属性")])]),t._v(" "),s("p",[s("code",[t._v("timeout")]),t._v(" ：事务的超时时间，默认值为 -1。如果超过该时间限制但事务还没有完成，则自动回滚事务。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-4-readonly-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-readonly-属性"}},[t._v("#")]),t._v(" 3.2.4 readOnly 属性**")]),t._v(" "),s("p",[s("code",[t._v("readOnly")]),t._v(" ：指定事务是否为只读事务，默认值为 false；为了忽略那些不需要事务的方法，比如读取数据，可以设置 read-only 为 true。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-5-rollbackfor-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-rollbackfor-属性"}},[t._v("#")]),t._v(" 3.2.5 rollbackFor 属性")]),t._v(" "),s("p",[s("code",[t._v("rollbackFor")]),t._v(" ：用于指定能够触发事务回滚的异常类型，可以指定多个异常类型。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-6-norollbackfor属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-norollbackfor属性"}},[t._v("#")]),t._v(" 3.2.6 "),s("strong",[t._v("noRollbackFor")]),t._v("属性**")]),t._v(" "),s("p",[s("code",[t._v("noRollbackFor")]),t._v("：抛出指定的异常类型，不回滚事务，也可以指定多个异常类型。")]),t._v(" "),s("h2",{attrs:{id:"_4-transactional失效场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-transactional失效场景"}},[t._v("#")]),t._v(" 4. @Transactional失效场景")]),t._v(" "),s("p",[t._v("接下来我们结合具体的代码分析一下哪些场景下，@Transactional 注解会失效。")]),t._v(" "),s("h4",{attrs:{id:"_4-1-transactional-应用在非-public-修饰的方法上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-transactional-应用在非-public-修饰的方法上"}},[t._v("#")]),t._v(" 4.1 @Transactional 应用在非 public 修饰的方法上")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("Transactional")]),t._v("注解应用在非"),s("code",[t._v("public")]),t._v(" 修饰的方法上，Transactional将会失效。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211201224539139.png",alt:"image-20211201224539139"}})]),t._v(" "),s("p",[t._v("之所以会失效是因为在Spring AOP 代理时，如上图所示 "),s("code",[t._v("TransactionInterceptor")]),t._v(" （事务拦截器）在目标方法执行前后进行拦截，"),s("code",[t._v("DynamicAdvisedInterceptor")]),t._v("（CglibAopProxy 的内部类）的 intercept 方法或 "),s("code",[t._v("JdkDynamicAopProxy")]),t._v(" 的 invoke 方法会间接调用 "),s("code",[t._v("AbstractFallbackTransactionAttributeSource")]),t._v("的 "),s("code",[t._v("computeTransactionAttribute")]),t._v(" 方法，获取Transactional 注解的事务配置信息。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionAttribute")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" targetClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Don't allow no-public methods as required.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allowPublicMethodsOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Modifier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPublic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModifiers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此方法会检查目标方法的修饰符是否为 public，不是 public则不会获取@Transactional 的属性配置信息。")]),t._v(" "),s("p",[s("strong",[t._v("注意："),s("code",[t._v("protected")]),t._v("、"),s("code",[t._v("private")]),t._v(" 修饰的方法上使用 "),s("code",[t._v("@Transactional")]),t._v(" 注解，虽然事务无效，但不会有任何报错，这是我们很容犯错的一点。")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-transactional-注解属性-propagation-设置错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-transactional-注解属性-propagation-设置错误"}},[t._v("#")]),t._v(" 4.2 @Transactional 注解属性 propagation 设置错误")]),t._v(" "),s("p",[t._v("这种失效是由于配置错误，若是错误的配置以下三种 propagation，事务将不会发生回滚。")]),t._v(" "),s("p",[s("code",[t._v("TransactionDefinition.PROPAGATION_SUPPORTS")]),t._v("：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。 "),s("code",[t._v("TransactionDefinition.PROPAGATION_NOT_SUPPORTED")]),t._v("：以非事务方式运行，如果当前存在事务，则把当前事务挂起。 "),s("code",[t._v("TransactionDefinition.PROPAGATION_NEVER")]),t._v("：以非事务方式运行，如果当前存在事务，则抛出异常。")]),t._v(" "),s("h3",{attrs:{id:"_4-3-transactional-注解属性-rollbackfor-设置错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-transactional-注解属性-rollbackfor-设置错误"}},[t._v("#")]),t._v(" 4.3 @Transactional  注解属性 rollbackFor 设置错误")]),t._v(" "),s("p",[s("code",[t._v("rollbackFor")]),t._v(" 可以指定能够触发事务回滚的异常类型。Spring默认抛出了未检查"),s("code",[t._v("unchecked")]),t._v("异常（继承自 "),s("code",[t._v("RuntimeException")]),t._v(" 的异常）或者 "),s("code",[t._v("Error")]),t._v("才回滚事务；其他异常不会触发回滚事务。如果在事务中抛出其他类型的异常，但却期望 Spring 能够回滚事务，就需要指定 "),s("strong",[t._v("rollbackFor")]),t._v("属性。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211201224728984.png",alt:"image-20211201224728984"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 希望自定义的异常可以进行回滚")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propagation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Propagation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("REQUIRED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rollbackFor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n")])])]),s("p",[t._v("若在目标方法中抛出的异常是 "),s("code",[t._v("rollbackFor")]),t._v(" 指定的异常的子类，事务同样会回滚。Spring源码如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDepth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" exceptionClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" depth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exceptionName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Found it!")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" depth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If we've gone as far as we can go and haven't found it...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDepth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exceptionClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSuperclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" depth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-4-同一个类中方法调用-导致-transactional失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-同一个类中方法调用-导致-transactional失效"}},[t._v("#")]),t._v(" 4.4 同一个类中方法调用，导致@Transactional失效")]),t._v(" "),s("p",[t._v("开发中避免不了会对同一个类里面的方法调用，比如有一个类Test，它的一个方法A，A再调用本类的方法B（不论方法B是用public还是private修饰），但方法A没有声明注解事务，而B方法有。则外部调用方法A之后，方法B的事务是不会起作用的。这也是经常犯错误的一个地方。")]),t._v(" "),s("p",[t._v("那为啥会出现这种情况？其实这还是由于使用"),s("code",[t._v("Spring AOP")]),t._v("代理造成的，因为只有当事务方法被当前类以外的代码调用时，才会由"),s("code",[t._v("Spring")]),t._v("生成的代理对象来管理。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//@Transactional")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),t._v(" cityInfoDict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n         * B 插入字段为 3的数据\n         */")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n         * A 插入字段为 2的数据\n         */")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" insert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),t._v(" cityInfoDict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setParentCityId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-5-异常被你的-catch-吃了-导致-transactional失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-异常被你的-catch-吃了-导致-transactional失效"}},[t._v("#")]),t._v(" 4.5 异常被你的 catch“吃了”导致@Transactional失效")]),t._v(" "),s("p",[t._v("这种情况是最常见的一种@Transactional注解失效场景，")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),t._v(" cityInfoDict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CityInfoDict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCityName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setParentCityId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n             * A 插入字段为 2的数据\n             */")]),t._v("\n            insert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cityInfoDictMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cityInfoDict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n             * B 插入字段为 3的数据\n             */")]),t._v("\n            b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果B方法内部抛了异常，而A方法此时try catch了B方法的异常，那这个事务还能正常回滚吗？")]),t._v(" "),s("p",[t._v("答案：不能！")]),t._v(" "),s("p",[t._v("会抛出异常：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only\n")])])]),s("p",[t._v("因为当ServiceB中抛出了一个异常以后，ServiceB标识当前事务需要rollback。但是ServiceA中由于你手动的捕获这个异常并进行处理，ServiceA认为当前事务应该正常commit。此时就出现了前后不一致，也就是因为这样，抛出了前面的UnexpectedRollbackException异常。")]),t._v(" "),s("p",[s("code",[t._v("spring")]),t._v("的事务是在调用业务方法之前开始的，业务方法执行完毕之后才执行"),s("code",[t._v("commit")]),t._v(" or "),s("code",[t._v("rollback")]),t._v("，事务是否执行取决于是否抛出"),s("code",[t._v("runtime异常")]),t._v("。如果抛出"),s("code",[t._v("runtime exception")]),t._v(" 并在你的业务方法中没有catch到的话，事务会回滚。")]),t._v(" "),s("p",[t._v("在业务方法中一般不需要catch异常，如果非要catch一定要抛出"),s("code",[t._v("throw new RuntimeException()")]),t._v("，或者注解中指定抛异常类型"),s("code",[t._v("@Transactional(rollbackFor=Exception.class)")]),t._v("，否则会导致事务失效，数据commit造成数据不一致，所以有些时候try catch反倒会画蛇添足。")]),t._v(" "),s("h3",{attrs:{id:"_4-6-数据库引擎不支持事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-数据库引擎不支持事务"}},[t._v("#")]),t._v(" 4.6 数据库引擎不支持事务")]),t._v(" "),s("p",[t._v("这种情况出现的概率并不高，事务能否生效数据库引擎是否支持事务是关键。常用的MySQL数据库默认使用支持事务的"),s("code",[t._v("innodb")]),t._v("引擎。一旦数据库引擎切换成不支持事务的"),s("code",[t._v("myisam")]),t._v("，那事务就从根本上失效了。")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844904096747503629",target:"_blank",rel:"noopener noreferrer"}},[t._v("一口气说出 6种，@Transactional注解的失效场景"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);