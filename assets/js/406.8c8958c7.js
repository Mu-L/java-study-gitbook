(window.webpackJsonp=window.webpackJsonp||[]).push([[406],{782:function(t,s,a){"use strict";a.r(s);var n=a(26),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot集成文件-大文件的上传-异步-分片-断点续传和秒传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成文件-大文件的上传-异步-分片-断点续传和秒传"}},[t._v("#")]),t._v(" SpringBoot集成文件-大文件的上传(异步，分片，断点续传和秒传)")]),t._v(" "),a("blockquote",[a("p",[t._v("上文中介绍的是常规文件的上传和下载，而超大文件的上传技术手段和普通文件上传是有差异的，主要通过基于分片的断点续传和秒传和异步上传等技术手段解决。本文主要介绍SpringBoot集成大文件上传的案例。")])]),t._v(" "),a("h2",{attrs:{id:"_1-知识准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-知识准备"}},[t._v("#")]),t._v(" 1. 知识准备")]),t._v(" "),a("blockquote",[a("p",[t._v("大文件的上传技术手段和普通文件上传是有差异的，主要通过基于分片的断点续传和秒传和异步上传解决。")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-大文件面临的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-大文件面临的问题"}},[t._v("#")]),t._v(" 1.1 大文件面临的问题")]),t._v(" "),a("ol",[a("li",[t._v("上传速度慢 -- 应对: "),a("strong",[t._v("分块上传")])]),t._v(" "),a("li",[t._v("上传文件到一半中断后，继续上传却只能重头开始上传 -- 应对: "),a("strong",[t._v("断点续传")])]),t._v(" "),a("li",[t._v("相同文件未修改再次上传, 却只能重头开始上传 -- 应对: "),a("strong",[t._v("秒传")])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-基于分片的断点续传和秒传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-基于分片的断点续传和秒传"}},[t._v("#")]),t._v(" 1.2 基于分片的断点续传和秒传")]),t._v(" "),a("blockquote",[a("p",[t._v("当我们上传的文件很大时，对大文件的处理通常通过"),a("strong",[t._v("分片上传")]),t._v("、"),a("strong",[t._v("断点续传")]),t._v("和"),a("strong",[t._v("秒传")]),t._v("技术手段实现。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("分片上传")])])]),t._v(" "),a("p",[t._v("分片上传就是将一个大文件分成若干份大小相等的小块文件，等所有小块文件上传成功后，再将文件进行合并成完整的原始文件。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("断点续传")])])]),t._v(" "),a("p",[t._v("断点续传就是重新上传文件时"),a("strong",[t._v("先判断哪些文件块已经上传过了")]),t._v("（比如将分片的chuck md5等信息保存在DB中)，如果上传过了则跳过这些块，否则上传没有上传的块。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("秒传")])])]),t._v(" "),a("p",[t._v("当用户选择上传一个文件时，服务端检测该文件之前是否已经被上传过，如果服务器已经存有该文件（完全一样），就立马返回前端 “文件已上传成功”。前端随即将进度条更新至100%。 这样给用户的感觉就是 “秒传” 的感觉。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-1-前后端该怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-前后端该怎么做"}},[t._v("#")]),t._v(" 1.2.1 前后端该怎么做？")]),t._v(" "),a("p",[t._v("对于分片上传，"),a("strong",[t._v("前后端分别需要怎么做呢")]),t._v("？")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("前端")]),t._v("：需要将文件file.slice()成多个文件块，并计算每一块的md5值，每次请求上传都是传一个小文件块。")]),t._v(" "),a("li",[a("strong",[t._v("后端")]),t._v("：需要接收每次上传的文件块并保存文件块的信息（比如md5), 如果已经上传则跳过；最后等所有文件上传完成之后，将所有的文件块合并成一个大文件。")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-异步上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-异步上传"}},[t._v("#")]),t._v(" 1.3 异步上传")]),t._v(" "),a("blockquote",[a("p",[t._v("当我们上传的文件很大，后台需要处理的时间很长，用户期望切换到其它页面继续工作，而不需要等待完成。这时候我们可以采用异步上传的方式。")])]),t._v(" "),a("p",[t._v("在SpringBoot中将一个方法声明为异步方法非常简单，只需两个注解即可"),a("code",[t._v("@EnableAsync")]),t._v("和"),a("code",[t._v("@Async")]),t._v("。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("@EnableAsync")]),t._v("用于开启SpringBoot支持异步的功能，用在SpringBoot的启动类上。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAsync")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("@Async")]),t._v("用于方法上，标记该方法为异步处理方法。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里带@Async的方法，会被当成一个子线程")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("processFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" inputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-file-upload-bigfile.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/fly910905/article/details/114284285",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于SpringBoot和WebUploader实现大文件分块上传.断点续传.秒传"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);