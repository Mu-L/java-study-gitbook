(window.webpackJsonp=window.webpackJsonp||[]).push([[757],{1134:function(e,a,s){"use strict";s.r(a);var t=s(26),c=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"使用acme-sh生成免费的ssl证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用acme-sh生成免费的ssl证书"}},[e._v("#")]),e._v(" 使用acme.sh生成免费的SSL证书")]),e._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网中文介绍"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("此文仅记录我的实操记录，与遇到的相关问题")])]),e._v(" "),s("p",[s("strong",[e._v("acme.sh")]),e._v(" 实现了 "),s("code",[e._v("acme")]),e._v(" 协议, 可以从 letsencrypt 生成免费的证书.")]),e._v(" "),s("p",[e._v("主要步骤:")]),e._v(" "),s("ol",[s("li",[e._v("安装 "),s("strong",[e._v("acme.sh")])]),e._v(" "),s("li",[e._v("生成证书")]),e._v(" "),s("li",[e._v("copy 证书到 nginx/apache 或者其他服务")]),e._v(" "),s("li",[e._v("更新证书")]),e._v(" "),s("li",[e._v("更新 "),s("strong",[e._v("acme.sh")])]),e._v(" "),s("li",[e._v("出错怎么办, 如何调试")])]),e._v(" "),s("p",[e._v("下面详细介绍.")]),e._v(" "),s("h2",{attrs:{id:"_1-安装-acme-sh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-acme-sh"}},[e._v("#")]),e._v(" 1. 安装 "),s("strong",[e._v("acme.sh")])]),e._v(" "),s("p",[e._v("安装很简单, 一个命令:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("curl  https://get.acme.sh | sh -s email=my@example.com\n")])])]),s("p",[e._v("普通用户和 root 用户都可以安装使用. 安装过程进行了以下几步:")]),e._v(" "),s("ol",[s("li",[e._v("把 acme.sh 安装到你的 "),s("strong",[e._v("home")]),e._v(" 目录下:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("~/.acme.sh/\n")])])]),s("p",[e._v("并创建 一个 bash 的 alias, 方便你的使用: "),s("code",[e._v("alias acme.sh=~/.acme.sh/acme.sh")])]),e._v(" "),s("ol",[s("li",[e._v("自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书.")])]),e._v(" "),s("p",[e._v("更高级的安装选项请参考: https://github.com/Neilpang/acme.sh/wiki/How-to-install")]),e._v(" "),s("p",[s("strong",[e._v("安装过程不会污染已有的系统任何功能和文件")]),e._v(", 所有的修改都限制在安装目录中: "),s("code",[e._v("~/.acme.sh/")])]),e._v(" "),s("h2",{attrs:{id:"_2-生成证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-生成证书"}},[e._v("#")]),e._v(" 2. 生成证书")]),e._v(" "),s("p",[s("strong",[e._v("acme.sh")]),e._v(" 实现了 "),s("strong",[e._v("acme")]),e._v(" 协议支持的所有验证协议. 一般有两种方式验证: http 和 dns 验证.")]),e._v(" "),s("h3",{attrs:{id:"_2-1-http-方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-http-方式"}},[e._v("#")]),e._v(" 2.1. http 方式")]),e._v(" "),s("h4",{attrs:{id:"_2-1-1-基础使用-指定网站根目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-基础使用-指定网站根目录"}},[e._v("#")]),e._v(" 2.1.1 基础使用（指定网站根目录）")]),e._v(" "),s("p",[e._v("需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue  -d mydomain.com -d www.mydomain.com  --webroot  /home/wwwroot/mydomain.com/\n")])])]),s("p",[e._v("只需要指定域名, 并指定域名所在的网站根目录. "),s("strong",[e._v("acme.sh")]),e._v(" 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.")]),e._v(" "),s("h4",{attrs:{id:"_2-1-2-apache服务器-nginx服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-apache服务器-nginx服务器"}},[e._v("#")]),e._v(" 2.1.2 "),s("strong",[e._v("apache")]),e._v("服务器/nginx服务器")]),e._v(" "),s("p",[e._v("如果你用的 "),s("strong",[e._v("apache")]),e._v("服务器, "),s("strong",[e._v("acme.sh")]),e._v(" 还可以智能的从 "),s("strong",[e._v("apache")]),e._v("的配置中自动完成验证, 你不需要指定网站根目录:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh --issue  -d mydomain.com   --apache\n")])])]),s("p",[e._v("如果你用的 "),s("strong",[e._v("nginx")]),e._v("服务器, 或者反代, "),s("strong",[e._v("acme.sh")]),e._v(" 还可以智能的从 "),s("strong",[e._v("nginx")]),e._v("的配置中自动完成验证, 你不需要指定网站根目录:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh --issue  -d mydomain.com   --nginx\n")])])]),s("p",[s("strong",[e._v("注意, 无论是 apache 还是 nginx 模式, acme.sh在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 ssl 的配置, 否则只能成功生成证书, 你的网站还是无法访问https. 但是为了安全, 你还是自己手动改配置吧.")])]),e._v(" "),s("h5",{attrs:{id:"_2-1-2-1-nginx服务器示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-1-nginx服务器示例"}},[e._v("#")]),e._v(" 2.1.2.1 nginx服务器示例")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220724224849353.png",alt:"image-20220724224849353"}})]),e._v(" "),s("h4",{attrs:{id:"_2-1-3-假装webserver-完成验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-假装webserver-完成验证"}},[e._v("#")]),e._v(" 2.1.3 假装webserver，完成验证")]),e._v(" "),s("p",[e._v("如果你还没有运行任何 web 服务, "),s("strong",[e._v("80")]),e._v(" 端口是空闲的, 那么 "),s("strong",[e._v("acme.sh")]),e._v(" 还能假装自己是一个webserver, 临时听在"),s("strong",[e._v("80")]),e._v(" 端口, 完成验证:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue -d mydomain.com   --standalone\n")])])]),s("p",[e._v("更高级的用法请参考: https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert")]),e._v(" "),s("h3",{attrs:{id:"_2-手动-dns-方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-手动-dns-方式"}},[e._v("#")]),e._v(" 2. 手动 dns 方式")]),e._v(" "),s("p",[e._v("手动在域名上添加一条 txt 解析记录, 验证域名所有权.")]),e._v(" "),s("p",[e._v("这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证. 坏处是，如果不同时配置 Automatic DNS API，使用这种方式 acme.sh 将无法自动更新证书，每次都需要手动再次重新解析验证域名所有权。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue  --dns   -d mydomain.com \\\n --yes-I-know-dns-manual-mode-enough-go-ahead-please\n")])])]),s("p",[e._v("然后, "),s("strong",[e._v("acme.sh")]),e._v(" 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 txt 记录即可.")]),e._v(" "),s("p",[e._v("等待解析完成之后, 重新生成证书:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --renew   -d mydomain.com \\\n  --yes-I-know-dns-manual-mode-enough-go-ahead-please\n")])])]),s("p",[e._v("注意第二次这里用的是 "),s("code",[e._v("--renew")])]),e._v(" "),s("p",[e._v("dns 方式的真正强大之处在于可以使用域名解析商提供的 api 自动添加 txt 记录完成验证.")]),e._v(" "),s("p",[s("strong",[e._v("acme.sh")]),e._v(" 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.")]),e._v(" "),s("p",[e._v("以 dnspod 为例, 你需要先登录到 dnspod 账号, 生成你的 api id 和 api key, 都是免费的. 然后:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('export DP_Id="1234"\n\nexport DP_Key="sADDsdasdgdsf"\n\nacme.sh   --issue   --dns dns_dp   -d aa.com  -d www.aa.com\n')])])]),s("p",[e._v("证书就会自动生成了. 这里给出的 api id 和 api key 会被自动记录下来, 将来你在使用 dnspod api 的时候, 就不需要再次指定了. 直接生成就好了:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue   -d  mydomain2.com   --dns  dns_dp\n")])])]),s("p",[e._v("更详细的 api 用法: https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md")]),e._v(" "),s("h2",{attrs:{id:"_3-copy-安装-证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-copy-安装-证书"}},[e._v("#")]),e._v(" 3. copy/安装 证书")]),e._v(" "),s("p",[e._v("前面证书生成以后, 接下来需要把证书 copy 到真正需要用它的地方.")]),e._v(" "),s("p",[e._v("注意, 默认生成的证书都放在安装目录下: "),s("code",[e._v("~/.acme.sh/")]),e._v(", 请不要直接使用此目录下的文件, 例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用, 而且目录结构可能会变化.")]),e._v(" "),s("p",[e._v("正确的使用方法是使用 "),s("code",[e._v("--install-cert")]),e._v(" 命令,并指定目标位置, 然后证书文件会被copy到相应的位置, 例如:")]),e._v(" "),s("h3",{attrs:{id:"_3-1-apache-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-apache-example"}},[e._v("#")]),e._v(" 3.1 Apache example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('acme.sh --install-cert -d example.com \\\n--cert-file      /path/to/certfile/in/apache/cert.pem  \\\n--key-file       /path/to/keyfile/in/apache/key.pem  \\\n--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\\n--reloadcmd     "service apache2 force-reload"\n')])])]),s("h3",{attrs:{id:"_3-2-nginx-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-nginx-example"}},[e._v("#")]),e._v(" 3.2 Nginx example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('acme.sh --install-cert -d example.com \\\n--key-file       /path/to/keyfile/in/nginx/key.pem  \\\n--fullchain-file /path/to/fullchain/nginx/cert.pem \\\n--reloadcmd     "service nginx force-reload"\n')])])]),s("p",[e._v("(一个小提醒, 这里用的是 "),s("code",[e._v("service nginx force-reload")]),e._v(", 不是 "),s("code",[e._v("service nginx reload")]),e._v(", 据测试, "),s("code",[e._v("reload")]),e._v(" 并不会重新加载证书, 所以用的 "),s("code",[e._v("force-reload")]),e._v(")")]),e._v(" "),s("p",[e._v("Nginx 的配置 "),s("code",[e._v("ssl_certificate")]),e._v(" 使用 "),s("code",[e._v("/etc/nginx/ssl/fullchain.cer")]),e._v(" ，而非 "),s("code",[e._v("/etc/nginx/ssl/<domain>.cer")]),e._v(" ，否则 "),s("a",{attrs:{href:"https://www.ssllabs.com/ssltest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL Labs"),s("OutboundLink")],1),e._v(" 的测试会报 "),s("code",[e._v("Chain issues Incomplete")]),e._v(" 错误。")]),e._v(" "),s("p",[s("code",[e._v("--install-cert")]),e._v("命令可以携带很多参数, 来指定目标文件. 并且可以指定 reloadcmd, 当证书更新以后, reloadcmd会被自动调用,让服务器生效.")]),e._v(" "),s("p",[e._v("详细参数请参考: https://github.com/Neilpang/acme.sh#3-install-the-issued-cert-to-apachenginx-etc")]),e._v(" "),s("p",[e._v("值得注意的是, 这里指定的所有参数都会被自动记录下来, 并在将来证书自动更新以后, 被再次自动调用.")]),e._v(" "),s("h1",{attrs:{id:"_4-查看已安装证书信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看已安装证书信息"}},[e._v("#")]),e._v(" 4. 查看已安装证书信息")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh --info -d example.com\n# 会输出如下内容：\nDOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf\nLe_Domain=example.com\nLe_Alt=no\nLe_Webroot=dns_ali\nLe_PreHook=\nLe_PostHook=\nLe_RenewHook=\nLe_API=https://acme-v02.api.letsencrypt.org/directory\nLe_Keylength=\nLe_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310\nLe_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310\nLe_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07\nLe_CertCreateTime=1649358725\nLe_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022\nLe_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022\nLe_NextRenewTime=1654456325\nLe_RealCertPath=\nLe_RealCACertPath=\nLe_RealKeyPath=/etc/acme/example.com/privkey.pem\nLe_ReloadCmd=service nginx force-reload\nLe_RealFullChainPath=/etc/acme/example.com/chain.pem\n")])])]),s("h1",{attrs:{id:"_5-更新证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-更新证书"}},[e._v("#")]),e._v(" 5. 更新证书")]),e._v(" "),s("p",[e._v("目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.")]),e._v(" "),s("p",[e._v("请确保 cronjob 正确安装, 看起来是类似这样的:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('crontab  -l\n\n56 * * * * "/root/.acme.sh"/acme.sh --cron --home "/root/.acme.sh" > /dev/null\n')])])]),s("h1",{attrs:{id:"_6-出错怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-出错怎么办"}},[e._v("#")]),e._v(" 6. 出错怎么办：")]),e._v(" "),s("p",[e._v("如果出错, 请添加 debug log：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue  .....  --debug \n")])])]),s("p",[e._v("或者：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("acme.sh  --issue  .....  --debug  2\n")])])]),s("p",[e._v("请参考： https://github.com/Neilpang/acme.sh/wiki/How-to-debug-acme.sh")]),e._v(" "),s("p",[e._v("最后, 本文并非完全的使用说明, 还有很多高级的功能, 更高级的用法请参看其他 wiki 页面.")]),e._v(" "),s("p",[e._v("https://github.com/Neilpang/acme.sh/wiki")]),e._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网中文介绍"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=c.exports}}]);