import { o as openBlock, c as createElementBlock, e as createStaticVNode } from "./app.72d9fd95.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="aspose-word\u52A8\u6001\u6E32\u67D3\u8868\u683C" tabindex="-1"><a class="header-anchor" href="#aspose-word\u52A8\u6001\u6E32\u67D3\u8868\u683C" aria-hidden="true">#</a> aspose.word\u52A8\u6001\u6E32\u67D3\u8868\u683C</h1><h2 id="_1-\u9700\u6C42" tabindex="-1"><a class="header-anchor" href="#_1-\u9700\u6C42" aria-hidden="true">#</a> 1. \u9700\u6C42</h2><p>\u6211\u4EEC\u4E1A\u52A1\u9700\u6C42\u9700\u8981\u52A8\u6001\u586B\u5145\u8868\u683C\u6570\u636E\u3002\u65E0\u6570\u636E\u7684\u8868\u683C\u9700\u8981\u7ED8\u5236\u4E00\u6761\u5927\u7684\u5220\u9664\u7EBF</p><h2 id="_2-\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 2. \u4EE3\u7801\u5B9E\u73B0</h2><h3 id="_2-1-\u52A8\u6001\u586B\u5145\u8868\u683C\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_2-1-\u52A8\u6001\u586B\u5145\u8868\u683C\u6570\u636E" aria-hidden="true">#</a> 2.1 \u52A8\u6001\u586B\u5145\u8868\u683C\u6570\u636E</h3><p>\u4E3B\u8981\u601D\u8DEF\u5C31\u662F\u5B9A\u4F4D\u5230\u8868\u683C\uFF0C\u5177\u4F53\u884C\uFF0C\u5177\u4F53\u7684\u683C\u3002\u8FDB\u884C\u7ED8\u5236</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**\n     * \u8868\u683C\u6570\u636E\u5904\u7406\n     *\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setTabledData</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable</span><span class="token punctuation">&gt;</span></span> asposeTables<span class="token punctuation">,</span> <span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">DocumentBuilder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\n\n        <span class="token class-name">NodeCollection</span> allTables <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token class-name">NodeType</span><span class="token punctuation">.</span>TABLE<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>allTables<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;\u6A21\u677F\u6709\u8BEF\uFF0C\u627E\u4E0D\u5230\u8868\u683C\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> tableIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> tableIndex <span class="token operator">&lt;</span> asposeTables<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tableIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// \u8868\u683C\u4FE1\u606F</span>\n            <span class="token class-name">Table</span> table <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Table</span><span class="token punctuation">)</span>allTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">FdAsposeTable</span> fdAsposeTable <span class="token operator">=</span> asposeTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span><span class="token punctuation">&gt;</span></span> fdRows <span class="token operator">=</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// \u6DFB\u52A0\u6A21\u677F\u884C\uFF08\u6570\u636E\u592A\u591A\u65F6\u6DFB\u52A0\uFF09</span>\n            <span class="token function">addRow</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> fdAsposeTable<span class="token punctuation">,</span> fdRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// \u586B\u5145\u8868\u683C\u6570\u636E</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> rowIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> rowIndex <span class="token operator">&lt;</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> rowIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// \u6BCF\u884C</span>\n                <span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span> row <span class="token operator">=</span> fdRows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeFieldAttr</span><span class="token punctuation">&gt;</span></span> tableFieldAttrList <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getFieldAttrList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>tableFieldAttrList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">int</span> colSize <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;colSize:&quot;</span> <span class="token operator">+</span> colSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> colIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> colIndex <span class="token operator">&lt;</span> colSize<span class="token punctuation">;</span> colIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// \u6BCF\u5217</span>\n                    <span class="token class-name">FdAsposeFieldAttr</span> asposeFieldAttr <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">,</span> rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;tableIndex:&quot;</span> <span class="token operator">+</span> tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;rowIndex:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;colIndex:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;getFieldValue:&quot;</span> <span class="token operator">+</span> asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    builder<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * \u6DFB\u52A0\u6A21\u677F\u884C\n     * <span class="token keyword">@param</span> <span class="token parameter">table</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">fdAsposeTable</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">fdRows</span>\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addRow</span><span class="token punctuation">(</span><span class="token class-name">Table</span> table<span class="token punctuation">,</span> <span class="token class-name">FdAsposeTable</span> fdAsposeTable<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span><span class="token punctuation">&gt;</span></span> fdRows<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//\u6A21\u677F\u884C</span>\n        <span class="token class-name">Node</span> templateRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//\u6A21\u677F\u6570\u636E\u884C\u6570</span>\n        <span class="token keyword">int</span> templateDataRowsCount <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getTailNotDataRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//\u8865\u5145\u6A21\u677F\u6570\u636E\u884C</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">isAutoTemplateDataRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> templateDataRowsCount <span class="token operator">&lt;</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">int</span> addCounts <span class="token operator">=</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> templateDataRowsCount<span class="token punctuation">;</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> addCounts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                <span class="token class-name">Node</span> addRow <span class="token operator">=</span> templateRow<span class="token punctuation">.</span><span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> addRow<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u7ED8\u5236\u5927\u5220\u9664\u7EBF" tabindex="-1"><a class="header-anchor" href="#_2-2-\u7ED8\u5236\u5927\u5220\u9664\u7EBF" aria-hidden="true">#</a> 2.2 \u7ED8\u5236\u5927\u5220\u9664\u7EBF</h3><p>\u5B9A\u4F4D\u51FA\u8868\u683C\u7A7A\u767D\u7684\u4F4D\u7F6E\uFF0C\u8BBE\u7F6E\u63D2\u5165\u4E00\u4E2A\u5927shape</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**\n     * \u8BBE\u7F6E\u8868\u683C\u7A7A\u683C\u5220\u9664\u7EBF\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">asposeTables</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">doc</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">builder</span>\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setTabledBlankCellDiagonalLine</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AsposeTable</span><span class="token punctuation">&gt;</span></span> asposeTables<span class="token punctuation">,</span> <span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">DocumentBuilder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> tableIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> tableIndex <span class="token operator">&lt;</span> asposeTables<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tableIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">NodeCollection</span> allTables <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token class-name">NodeType</span><span class="token punctuation">.</span>TABLE<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// \u6BCF\u4E2A\u8868\u683C</span>\n            <span class="token class-name">Table</span> table <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Table</span><span class="token punctuation">)</span> allTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token class-name">RowCollection</span> rows <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">Row</span> row <span class="token operator">=</span> rows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">String</span> firstCellText <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getFirstCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>firstCellText<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getLastCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        start <span class="token operator">=</span> i<span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    total<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">double</span> blankHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                <span class="token keyword">double</span> blankWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                blankHeight <span class="token operator">=</span> total <span class="token operator">*</span> <span class="token class-name">FdConstants</span><span class="token punctuation">.</span>BLANK_CELL_HEIGHT<span class="token punctuation">;</span>\n\n\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    blankWidth <span class="token operator">+=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCellFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token class-name">Shape</span> shape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token class-name">ShapeType</span><span class="token punctuation">.</span>LINE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">//\u8BBE\u7F6E\u5BBD\u548C\u9AD8</span>\n                shape<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>blankWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                shape<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>blankHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                shape<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span><span class="token operator">-</span>table<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                shape<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                shape<span class="token punctuation">.</span><span class="token function">setFlipOrientation</span><span class="token punctuation">(</span><span class="token class-name">FlipOrientation</span><span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// shape.Rotation =-270;</span>\n                <span class="token comment">//\u5D4C\u5165\u65B9\u5F0F</span>\n                shape<span class="token punctuation">.</span><span class="token function">setWrapType</span><span class="token punctuation">(</span><span class="token class-name">WrapType</span><span class="token punctuation">.</span>NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                builder<span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5199\u5165\u6587\u6863</span>\n                doc<span class="token punctuation">.</span><span class="token function">updatePageLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u6E32\u67D3\u5355\u5143\u683C\u65E0\u6570\u636E\u65F6\u7684\u5220\u9664\u7EBF" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6E32\u67D3\u5355\u5143\u683C\u65E0\u6570\u636E\u65F6\u7684\u5220\u9664\u7EBF" aria-hidden="true">#</a> 2.3 \u6E32\u67D3\u5355\u5143\u683C\u65E0\u6570\u636E\u65F6\u7684\u5220\u9664\u7EBF</h3><p>\u53D6\u5F97\u5BF9\u5E94\u7684\u8FB9\u6846</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> colIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> colIndex <span class="token operator">&lt;</span> colSize<span class="token punctuation">;</span> colIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// \u6BCF\u5217</span>\n                    <span class="token class-name">FdAsposeFieldAttr</span> asposeFieldAttr <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token class-name">String</span> fieldValue <span class="token operator">=</span> asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">,</span> rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">isDiagonalUpLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>fieldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">// \u5355\u5143\u683C\u6570\u636E\u4E3A\u7A7A\u7684\u65F6\u5019\uFF0C\u6DFB\u52A0\u659C\u7EBF</span>\n                        <span class="token class-name">BorderCollection</span> borders <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">getCellFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">getBorders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token class-name">Border</span> border <span class="token operator">=</span> borders<span class="token punctuation">.</span><span class="token function">getByBorderType</span><span class="token punctuation">(</span><span class="token class-name">BorderType</span><span class="token punctuation">.</span>DIAGONAL_UP<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        border<span class="token punctuation">.</span><span class="token function">setLineStyle</span><span class="token punctuation">(</span><span class="token class-name">LineStyle</span><span class="token punctuation">.</span>SINGLE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        border<span class="token punctuation">.</span><span class="token function">setLineWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        borders<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                        builder<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fieldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n\n                <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 13);
const _hoisted_14 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_14);
}
var aspose_word__Asposeword_______html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "aspose.word\u57FA\u7840-asposeword\u52A8\u6001\u6E32\u67D3\u8868\u683C.html.vue"]]);
export { aspose_word__Asposeword_______html as default };
